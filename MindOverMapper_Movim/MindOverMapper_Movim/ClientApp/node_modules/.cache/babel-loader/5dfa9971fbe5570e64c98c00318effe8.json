{"ast":null,"code":"/**\r\n * Module exports.\r\n */\nmodule.exports = getDocument; // defined by w3c\n\nvar DOCUMENT_NODE = 9;\n/**\r\n * Returns `true` if `w` is a Document object, or `false` otherwise.\r\n *\r\n * @param {?} d - Document object, maybe\r\n * @return {Boolean}\r\n * @private\r\n */\n\nfunction isDocument(d) {\n  return d && d.nodeType === DOCUMENT_NODE;\n}\n/**\r\n * Returns the `document` object associated with the given `node`, which may be\r\n * a DOM element, the Window object, a Selection, a Range. Basically any DOM\r\n * object that references the Document in some way, this function will find it.\r\n *\r\n * @param {Mixed} node - DOM node, selection, or range in which to find the `document` object\r\n * @return {Document} the `document` object associated with `node`\r\n * @public\r\n */\n\n\nfunction getDocument(node) {\n  if (isDocument(node)) {\n    return node;\n  } else if (isDocument(node.ownerDocument)) {\n    return node.ownerDocument;\n  } else if (isDocument(node.document)) {\n    return node.document;\n  } else if (node.parentNode) {\n    return getDocument(node.parentNode); // Range support\n  } else if (node.commonAncestorContainer) {\n    return getDocument(node.commonAncestorContainer);\n  } else if (node.startContainer) {\n    return getDocument(node.startContainer); // Selection support\n  } else if (node.anchorNode) {\n    return getDocument(node.anchorNode);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}