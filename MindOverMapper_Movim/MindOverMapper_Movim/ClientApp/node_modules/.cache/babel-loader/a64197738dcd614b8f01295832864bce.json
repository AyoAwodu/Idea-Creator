{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate'); // Return the index of the first character that differs between both string, or\n// the smallest string length otherwise.\n\n\nfunction firstDifferentCharacter(a, b) {\n  if (a.length > b.length) {\n    return firstDifferentCharacter(b, a);\n  }\n\n  var indexes = Array(a.length).fill().map(function (v, i) {\n    return i;\n  });\n  var index = indexes.find(function (i) {\n    return a[i] !== b[i];\n  });\n  return index == null ? a.length : index;\n}\n/**\n * Dedent all lines in selection\n */\n\n\nfunction dedentLines(opts, editor, // Indent to remove\nindent) {\n  var value = editor.value;\n  var document = value.document,\n      selection = value.selection;\n  var lines = document.getLeafBlocksAtRange(selection).filter(function (node) {\n    return node.type === opts.lineType;\n  });\n  return lines.reduce(function (c, line) {\n    // Remove a level of indent from the start of line\n    var textNode = line.nodes.first();\n    var lengthToRemove = firstDifferentCharacter(textNode.text, indent);\n    return c.removeTextByKey(textNode.key, 0, lengthToRemove);\n  }, editor);\n}\n\nexports.default = dedentLines;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/changes/dedentLines.js"],"names":["Object","defineProperty","exports","value","require","firstDifferentCharacter","a","b","length","indexes","Array","fill","map","v","i","index","find","dedentLines","opts","editor","indent","document","selection","lines","getLeafBlocksAtRange","filter","node","type","lineType","reduce","c","line","textNode","nodes","first","lengthToRemove","text","removeTextByKey","key","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIAC,OAAO,CAAC,OAAD,CAAP,C,CAEA;AACA;;;AACA,SAASC,uBAAT,CAAiCC,CAAjC,EAAoCC,CAApC,EAAuC;AACnC,MAAID,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAjB,EAAyB;AACrB,WAAOH,uBAAuB,CAACE,CAAD,EAAID,CAAJ,CAA9B;AACH;;AAED,MAAIG,OAAO,GAAGC,KAAK,CAACJ,CAAC,CAACE,MAAH,CAAL,CAAgBG,IAAhB,GAAuBC,GAAvB,CAA2B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrD,WAAOA,CAAP;AACH,GAFa,CAAd;AAGA,MAAIC,KAAK,GAAGN,OAAO,CAACO,IAAR,CAAa,UAAUF,CAAV,EAAa;AAClC,WAAOR,CAAC,CAACQ,CAAD,CAAD,KAASP,CAAC,CAACO,CAAD,CAAjB;AACH,GAFW,CAAZ;AAIA,SAAOC,KAAK,IAAI,IAAT,GAAgBT,CAAC,CAACE,MAAlB,GAA2BO,KAAlC;AACH;AAED;;;;;AAIA,SAASE,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EACA;AACAC,MAFA,EAEQ;AACJ,MAAIjB,KAAK,GAAGgB,MAAM,CAAChB,KAAnB;AACA,MAAIkB,QAAQ,GAAGlB,KAAK,CAACkB,QAArB;AAAA,MACIC,SAAS,GAAGnB,KAAK,CAACmB,SADtB;AAGA,MAAIC,KAAK,GAAGF,QAAQ,CAACG,oBAAT,CAA8BF,SAA9B,EAAyCG,MAAzC,CAAgD,UAAUC,IAAV,EAAgB;AACxE,WAAOA,IAAI,CAACC,IAAL,KAAcT,IAAI,CAACU,QAA1B;AACH,GAFW,CAAZ;AAIA,SAAOL,KAAK,CAACM,MAAN,CAAa,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AACnC;AACA,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAWC,KAAX,EAAf;AACA,QAAIC,cAAc,GAAG9B,uBAAuB,CAAC2B,QAAQ,CAACI,IAAV,EAAgBhB,MAAhB,CAA5C;AACA,WAAOU,CAAC,CAACO,eAAF,CAAkBL,QAAQ,CAACM,GAA3B,EAAgC,CAAhC,EAAmCH,cAAnC,CAAP;AACH,GALM,EAKJhB,MALI,CAAP;AAMH;;AAEDjB,OAAO,CAACqC,OAAR,GAAkBtB,WAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nrequire('slate');\n\n// Return the index of the first character that differs between both string, or\n// the smallest string length otherwise.\nfunction firstDifferentCharacter(a, b) {\n    if (a.length > b.length) {\n        return firstDifferentCharacter(b, a);\n    }\n\n    var indexes = Array(a.length).fill().map(function (v, i) {\n        return i;\n    });\n    var index = indexes.find(function (i) {\n        return a[i] !== b[i];\n    });\n\n    return index == null ? a.length : index;\n}\n\n/**\n * Dedent all lines in selection\n */\n\nfunction dedentLines(opts, editor,\n// Indent to remove\nindent) {\n    var value = editor.value;\n    var document = value.document,\n        selection = value.selection;\n\n    var lines = document.getLeafBlocksAtRange(selection).filter(function (node) {\n        return node.type === opts.lineType;\n    });\n\n    return lines.reduce(function (c, line) {\n        // Remove a level of indent from the start of line\n        var textNode = line.nodes.first();\n        var lengthToRemove = firstDifferentCharacter(textNode.text, indent);\n        return c.removeTextByKey(textNode.key, 0, lengthToRemove);\n    }, editor);\n}\n\nexports.default = dedentLines;"]},"metadata":{},"sourceType":"script"}