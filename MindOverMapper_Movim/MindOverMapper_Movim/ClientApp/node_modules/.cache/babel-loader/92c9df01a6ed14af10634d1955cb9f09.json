{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _parser = require(\"./parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _slate = require(\"slate\");\n\nvar _immutable = require(\"immutable\");\n\nvar _urls = require(\"./urls\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar String = new _immutable.Record({\n  object: \"string\",\n  text: \"\"\n});\n/**\n * Rules to (de)serialize nodes.\n *\n * @type {Object}\n */\n\nvar tableHeader = \"\";\nvar firstRow = true;\nvar RULES = [{\n  serialize: function serialize(obj, children) {\n    if (obj.object === \"string\") {\n      return children;\n    }\n  }\n}, {\n  serialize: function serialize(obj, children, document) {\n    if (obj.object !== \"block\") return;\n    var parent = document.getParent(obj.key);\n\n    switch (obj.type) {\n      case \"table\":\n        tableHeader = \"\";\n        firstRow = true; // trim removes trailing newline\n\n        return children.trim();\n\n      case \"table-cell\":\n        {\n          switch (obj.getIn([\"data\", \"align\"])) {\n            case \"left\":\n              tableHeader += \"|:--- \";\n              break;\n\n            case \"center\":\n              tableHeader += \"|:---:\";\n              break;\n\n            case \"right\":\n              tableHeader += \"| ---:\";\n              break;\n\n            default:\n              tableHeader += \"| --- \";\n          }\n\n          return \"| \" + children + \" \";\n        }\n\n      case \"table-row\":\n        var output = \"\";\n\n        if (firstRow) {\n          output = tableHeader + \"|\\n\";\n          tableHeader = \"\";\n          firstRow = false;\n        }\n\n        return children + \"|\\n\" + output;\n\n      case \"paragraph\":\n        return children;\n\n      case \"code\":\n        {\n          var language = obj.getIn([\"data\", \"language\"]) || \"\";\n          return \"```\" + language + \"\\n\" + children + \"\\n```\";\n        }\n\n      case \"code-line\":\n        return children + \"\\n\";\n\n      case \"block-quote\":\n        // Handle multi-line blockquotes\n        return children.split(\"\\n\").map(function (text) {\n          return \"> \" + text;\n        }).join(\"\\n\");\n\n      case \"todo-list\":\n      case \"bulleted-list\":\n      case \"ordered-list\":\n        {\n          // root list\n          if (parent === document) {\n            return children;\n          } // nested list\n\n\n          return \"\\n\" + children.replace(/\\n+$/gm, \"\").replace(/^/gm, \"   \");\n        }\n\n      case \"list-item\":\n        {\n          switch (parent.type) {\n            case \"ordered-list\":\n              return \"1. \" + children + \"\\n\";\n\n            case \"todo-list\":\n              var checked = obj.getIn([\"data\", \"checked\"]);\n              var box = checked ? \"[x]\" : \"[ ]\";\n              return box + \" \" + children + \"\\n\";\n\n            default:\n            case \"bulleted-list\":\n              return \"* \" + children + \"\\n\";\n          }\n        }\n\n      case \"heading1\":\n        return \"# \" + children + \"\\n\";\n\n      case \"heading2\":\n        return \"\\n## \" + children + \"\\n\";\n\n      case \"heading3\":\n        return \"\\n### \" + children + \"\\n\";\n\n      case \"heading4\":\n        return \"\\n#### \" + children + \"\\n\";\n\n      case \"heading5\":\n        return \"\\n##### \" + children + \"\\n\";\n\n      case \"heading6\":\n        return \"\\n###### \" + children + \"\\n\";\n\n      case \"horizontal-rule\":\n        return \"---\";\n\n      case \"image\":\n        var alt = obj.getIn([\"data\", \"alt\"]) || \"\";\n        var src = (0, _urls.encode)(obj.getIn([\"data\", \"src\"]) || \"\");\n        return \"![\" + alt + \"](\" + src + \")\";\n    }\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.type === \"hashtag\") return children;\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.type === \"link\") {\n      var href = (0, _urls.encode)(obj.getIn([\"data\", \"href\"]) || \"\");\n      var text = children.trim() || href;\n      return href ? \"[\" + text + \"](\" + href + \")\" : text;\n    }\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.object !== \"mark\") return;\n    if (!children) return;\n\n    switch (obj.type) {\n      case \"bold\":\n        return \"**\" + children + \"**\";\n\n      case \"italic\":\n        return \"_\" + children + \"_\";\n\n      case \"code\":\n        return \"`\" + children + \"`\";\n\n      case \"inserted\":\n        return \"++\" + children + \"++\";\n\n      case \"deleted\":\n        return \"~~\" + children + \"~~\";\n\n      case \"underlined\":\n        return \"__\" + children + \"__\";\n    }\n  }\n}];\n/**\n * Markdown serializer.\n *\n * @type {Markdown}\n */\n\nvar Markdown = function () {\n  /**\n   * Create a new serializer with `rules`.\n   *\n   * @param {Object} options\n   * @property {Array} rules\n   * @return {Markdown} serializer\n   */\n  function Markdown() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Markdown);\n\n    this.rules = [].concat(_toConsumableArray(options.rules || []), RULES);\n    this.serializeNode = this.serializeNode.bind(this);\n    this.serializeLeaves = this.serializeLeaves.bind(this);\n    this.serializeString = this.serializeString.bind(this);\n  }\n  /**\n   * Serialize a `state` object into an HTML string.\n   *\n   * @param {State} state\n   * @return {String} markdown\n   */\n\n\n  _createClass(Markdown, [{\n    key: \"serialize\",\n    value: function serialize(state) {\n      var _this = this;\n\n      var document = state.document;\n      var elements = document.nodes.map(function (node) {\n        return _this.serializeNode(node, document);\n      });\n      var output = elements.join(\"\\n\"); // trim beginning whitespace\n\n      return output.replace(/^\\s+/g, \"\");\n    }\n    /**\n     * Serialize a `node`.\n     *\n     * @param {Node} node\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeNode\",\n    value: function serializeNode(node, document) {\n      var _this2 = this;\n\n      if (node.object == \"text\") {\n        var leaves = node.getLeaves();\n        var inCodeBlock = !!document.getClosest(node.key, function (n) {\n          return n.type === \"code\";\n        });\n        return leaves.map(function (leave) {\n          var inCodeMark = !!leave.marks.filter(function (mark) {\n            return mark.type === \"code\";\n          }).size;\n          return _this2.serializeLeaves(leave, !inCodeBlock && !inCodeMark);\n        });\n      }\n\n      var children = node.nodes.map(function (childNode) {\n        var serialized = _this2.serializeNode(childNode, document);\n\n        return (serialized && serialized.join ? serialized.join(\"\") : serialized) || \"\";\n      }).join( // Special case for blockquotes, children in blockquotes are separated by new lines\n      node.type === \"block-quote\" ? \"\\n\" : \"\");\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rule = _step.value;\n          if (!rule.serialize) continue;\n          var ret = rule.serialize(node, children, document);\n          if (ret) return ret;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Serialize `leaves`.\n     *\n     * @param {Leave[]} leaves\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeLeaves\",\n    value: function serializeLeaves(leaves) {\n      var _this3 = this;\n\n      var escape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var leavesText = leaves.text;\n\n      if (escape) {\n        // escape markdown characters\n        leavesText = (0, _utils.escapeMarkdownChars)(leavesText);\n      }\n\n      var string = new String({\n        text: leavesText\n      });\n      var text = this.serializeString(string);\n      return leaves.marks.reduce(function (children, mark) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this3.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var rule = _step2.value;\n            if (!rule.serialize) continue;\n            var ret = rule.serialize(mark, children);\n            if (ret) return ret;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }, text);\n    }\n    /**\n     * Serialize a `string`.\n     *\n     * @param {String} string\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeString\",\n    value: function serializeString(string) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.rules[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var rule = _step3.value;\n          if (!rule.serialize) continue;\n          var ret = rule.serialize(string, string.text);\n          if (ret) return ret;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Deserialize a markdown `string`.\n     *\n     * @param {String} markdown\n     * @return {State} state\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(markdown) {\n      var document = _parser2.default.parse(markdown);\n\n      return _slate.Value.fromJSON({\n        document: document\n      });\n    }\n  }]);\n\n  return Markdown;\n}();\n\nexports.default = Markdown;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/slate-md-serializer/lib/renderer.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_parser","require","_parser2","_interopRequireDefault","_slate","_immutable","_urls","_utils","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","String","Record","object","text","tableHeader","firstRow","RULES","serialize","children","document","parent","getParent","type","trim","getIn","output","language","split","map","join","replace","checked","box","alt","src","encode","href","Markdown","options","arguments","undefined","rules","concat","serializeNode","bind","serializeLeaves","serializeString","state","_this","elements","nodes","node","_this2","leaves","getLeaves","inCodeBlock","getClosest","n","leave","inCodeMark","marks","filter","mark","size","childNode","serialized","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","rule","ret","err","return","_this3","escape","leavesText","escapeMarkdownChars","string","reduce","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","deserialize","markdown","parse","Value","fromJSON"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _parser = require(\"./parser\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _slate = require(\"slate\");\n\nvar _immutable = require(\"immutable\");\n\nvar _urls = require(\"./urls\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar String = new _immutable.Record({\n  object: \"string\",\n  text: \"\"\n});\n\n/**\n * Rules to (de)serialize nodes.\n *\n * @type {Object}\n */\n\nvar tableHeader = \"\";\nvar firstRow = true;\n\nvar RULES = [{\n  serialize: function serialize(obj, children) {\n    if (obj.object === \"string\") {\n      return children;\n    }\n  }\n}, {\n  serialize: function serialize(obj, children, document) {\n    if (obj.object !== \"block\") return;\n    var parent = document.getParent(obj.key);\n\n    switch (obj.type) {\n      case \"table\":\n        tableHeader = \"\";\n        firstRow = true;\n\n        // trim removes trailing newline\n        return children.trim();\n      case \"table-cell\":\n        {\n          switch (obj.getIn([\"data\", \"align\"])) {\n            case \"left\":\n              tableHeader += \"|:--- \";\n              break;\n            case \"center\":\n              tableHeader += \"|:---:\";\n              break;\n            case \"right\":\n              tableHeader += \"| ---:\";\n              break;\n            default:\n              tableHeader += \"| --- \";\n          }\n          return \"| \" + children + \" \";\n        }\n      case \"table-row\":\n        var output = \"\";\n        if (firstRow) {\n          output = tableHeader + \"|\\n\";\n          tableHeader = \"\";\n          firstRow = false;\n        }\n        return children + \"|\\n\" + output;\n      case \"paragraph\":\n        return children;\n      case \"code\":\n        {\n          var language = obj.getIn([\"data\", \"language\"]) || \"\";\n          return \"```\" + language + \"\\n\" + children + \"\\n```\";\n        }\n      case \"code-line\":\n        return children + \"\\n\";\n      case \"block-quote\":\n        // Handle multi-line blockquotes\n        return children.split(\"\\n\").map(function (text) {\n          return \"> \" + text;\n        }).join(\"\\n\");\n      case \"todo-list\":\n      case \"bulleted-list\":\n      case \"ordered-list\":\n        {\n          // root list\n          if (parent === document) {\n            return children;\n          }\n\n          // nested list\n          return \"\\n\" + children.replace(/\\n+$/gm, \"\").replace(/^/gm, \"   \");\n        }\n      case \"list-item\":\n        {\n          switch (parent.type) {\n            case \"ordered-list\":\n              return \"1. \" + children + \"\\n\";\n            case \"todo-list\":\n              var checked = obj.getIn([\"data\", \"checked\"]);\n              var box = checked ? \"[x]\" : \"[ ]\";\n              return box + \" \" + children + \"\\n\";\n            default:\n            case \"bulleted-list\":\n              return \"* \" + children + \"\\n\";\n          }\n        }\n      case \"heading1\":\n        return \"# \" + children + \"\\n\";\n      case \"heading2\":\n        return \"\\n## \" + children + \"\\n\";\n      case \"heading3\":\n        return \"\\n### \" + children + \"\\n\";\n      case \"heading4\":\n        return \"\\n#### \" + children + \"\\n\";\n      case \"heading5\":\n        return \"\\n##### \" + children + \"\\n\";\n      case \"heading6\":\n        return \"\\n###### \" + children + \"\\n\";\n      case \"horizontal-rule\":\n        return \"---\";\n      case \"image\":\n        var alt = obj.getIn([\"data\", \"alt\"]) || \"\";\n        var src = (0, _urls.encode)(obj.getIn([\"data\", \"src\"]) || \"\");\n        return \"![\" + alt + \"](\" + src + \")\";\n    }\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.type === \"hashtag\") return children;\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.type === \"link\") {\n      var href = (0, _urls.encode)(obj.getIn([\"data\", \"href\"]) || \"\");\n      var text = children.trim() || href;\n      return href ? \"[\" + text + \"](\" + href + \")\" : text;\n    }\n  }\n}, {\n  serialize: function serialize(obj, children) {\n    if (obj.object !== \"mark\") return;\n    if (!children) return;\n\n    switch (obj.type) {\n      case \"bold\":\n        return \"**\" + children + \"**\";\n      case \"italic\":\n        return \"_\" + children + \"_\";\n      case \"code\":\n        return \"`\" + children + \"`\";\n      case \"inserted\":\n        return \"++\" + children + \"++\";\n      case \"deleted\":\n        return \"~~\" + children + \"~~\";\n      case \"underlined\":\n        return \"__\" + children + \"__\";\n    }\n  }\n}];\n\n/**\n * Markdown serializer.\n *\n * @type {Markdown}\n */\n\nvar Markdown = function () {\n  /**\n   * Create a new serializer with `rules`.\n   *\n   * @param {Object} options\n   * @property {Array} rules\n   * @return {Markdown} serializer\n   */\n\n  function Markdown() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Markdown);\n\n    this.rules = [].concat(_toConsumableArray(options.rules || []), RULES);\n\n    this.serializeNode = this.serializeNode.bind(this);\n    this.serializeLeaves = this.serializeLeaves.bind(this);\n    this.serializeString = this.serializeString.bind(this);\n  }\n\n  /**\n   * Serialize a `state` object into an HTML string.\n   *\n   * @param {State} state\n   * @return {String} markdown\n   */\n\n  _createClass(Markdown, [{\n    key: \"serialize\",\n    value: function serialize(state) {\n      var _this = this;\n\n      var document = state.document;\n\n      var elements = document.nodes.map(function (node) {\n        return _this.serializeNode(node, document);\n      });\n\n      var output = elements.join(\"\\n\");\n\n      // trim beginning whitespace\n      return output.replace(/^\\s+/g, \"\");\n    }\n\n    /**\n     * Serialize a `node`.\n     *\n     * @param {Node} node\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeNode\",\n    value: function serializeNode(node, document) {\n      var _this2 = this;\n\n      if (node.object == \"text\") {\n        var leaves = node.getLeaves();\n        var inCodeBlock = !!document.getClosest(node.key, function (n) {\n          return n.type === \"code\";\n        });\n\n        return leaves.map(function (leave) {\n          var inCodeMark = !!leave.marks.filter(function (mark) {\n            return mark.type === \"code\";\n          }).size;\n          return _this2.serializeLeaves(leave, !inCodeBlock && !inCodeMark);\n        });\n      }\n\n      var children = node.nodes.map(function (childNode) {\n        var serialized = _this2.serializeNode(childNode, document);\n        return (serialized && serialized.join ? serialized.join(\"\") : serialized) || \"\";\n      }).join(\n      // Special case for blockquotes, children in blockquotes are separated by new lines\n      node.type === \"block-quote\" ? \"\\n\" : \"\");\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rule = _step.value;\n\n          if (!rule.serialize) continue;\n          var ret = rule.serialize(node, children, document);\n          if (ret) return ret;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Serialize `leaves`.\n     *\n     * @param {Leave[]} leaves\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeLeaves\",\n    value: function serializeLeaves(leaves) {\n      var _this3 = this;\n\n      var escape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var leavesText = leaves.text;\n      if (escape) {\n        // escape markdown characters\n        leavesText = (0, _utils.escapeMarkdownChars)(leavesText);\n      }\n      var string = new String({ text: leavesText });\n      var text = this.serializeString(string);\n\n      return leaves.marks.reduce(function (children, mark) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this3.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var rule = _step2.value;\n\n            if (!rule.serialize) continue;\n            var ret = rule.serialize(mark, children);\n            if (ret) return ret;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }, text);\n    }\n\n    /**\n     * Serialize a `string`.\n     *\n     * @param {String} string\n     * @return {String}\n     */\n\n  }, {\n    key: \"serializeString\",\n    value: function serializeString(string) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.rules[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var rule = _step3.value;\n\n          if (!rule.serialize) continue;\n          var ret = rule.serialize(string, string.text);\n          if (ret) return ret;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    /**\n     * Deserialize a markdown `string`.\n     *\n     * @param {String} markdown\n     * @return {State} state\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(markdown) {\n      var document = _parser2.default.parse(markdown);\n      return _slate.Value.fromJSON({ document: document });\n    }\n  }]);\n\n  return Markdown;\n}();\n\nexports.default = Markdown;"]},"metadata":{},"sourceType":"script"}