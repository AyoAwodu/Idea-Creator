{"ast":null,"code":"/*\r\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nvar ProgressBar =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ProgressBar, _super);\n\n  function ProgressBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ProgressBar.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        _c = _b.animate,\n        animate = _c === void 0 ? true : _c,\n        className = _b.className,\n        intent = _b.intent,\n        _d = _b.stripes,\n        stripes = _d === void 0 ? true : _d,\n        value = _b.value;\n    var classes = classNames(Classes.PROGRESS_BAR, Classes.intentClass(intent), (_a = {}, _a[Classes.PROGRESS_NO_ANIMATION] = !animate, _a[Classes.PROGRESS_NO_STRIPES] = !stripes, _a), className); // don't set width if value is null (rely on default CSS value)\n\n    var width = value == null ? null : 100 * clamp(value, 0, 1) + \"%\";\n    return React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(\"div\", {\n      className: Classes.PROGRESS_METER,\n      style: {\n        width: width\n      }\n    }));\n  };\n\n  ProgressBar.displayName = DISPLAYNAME_PREFIX + \".ProgressBar\";\n  ProgressBar = tslib_1.__decorate([polyfill], ProgressBar);\n  return ProgressBar;\n}(AbstractPureComponent2);\n\nexport { ProgressBar };","map":null,"metadata":{},"sourceType":"module"}