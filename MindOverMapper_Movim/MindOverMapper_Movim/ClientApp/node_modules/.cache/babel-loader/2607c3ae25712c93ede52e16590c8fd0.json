{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, InputGroup, Keys, Popover, Position, Utils } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\n\nvar Suggest =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Suggest, _super);\n\n  function Suggest() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isOpen: _this.props.popoverProps != null && _this.props.popoverProps.isOpen || false,\n      selectedItem: _this.getInitialSelectedItem()\n    };\n    _this.TypedQueryList = QueryList.ofType();\n    _this.input = null;\n    _this.queryList = null;\n    _this.refHandlers = {\n      input: function (ref) {\n        _this.input = ref;\n        Utils.safeInvokeMember(_this.props.inputProps, \"inputRef\", ref);\n      },\n      queryList: function (ref) {\n        return _this.queryList = ref;\n      }\n    };\n\n    _this.renderQueryList = function (listProps) {\n      var _a = _this.props,\n          fill = _a.fill,\n          _b = _a.inputProps,\n          inputProps = _b === void 0 ? {} : _b,\n          _c = _a.popoverProps,\n          popoverProps = _c === void 0 ? {} : _c;\n      var _d = _this.state,\n          isOpen = _d.isOpen,\n          selectedItem = _d.selectedItem;\n      var handleKeyDown = listProps.handleKeyDown,\n          handleKeyUp = listProps.handleKeyUp;\n      var _e = inputProps.autoComplete,\n          autoComplete = _e === void 0 ? \"off\" : _e,\n          _f = inputProps.placeholder,\n          placeholder = _f === void 0 ? \"Search...\" : _f;\n      var selectedItemText = selectedItem ? _this.props.inputValueRenderer(selectedItem) : \"\"; // placeholder shows selected item while open.\n\n      var inputPlaceholder = isOpen && selectedItemText ? selectedItemText : placeholder; // value shows query when open, and query remains when closed if nothing is selected.\n      // if resetOnClose is enabled, then hide query when not open. (see handlePopoverOpening)\n\n      var inputValue = isOpen ? listProps.query : selectedItemText || (_this.props.resetOnClose ? \"\" : listProps.query);\n\n      if (fill) {\n        popoverProps.fill = true;\n        inputProps.fill = true;\n      }\n\n      return React.createElement(Popover, tslib_1.__assign({\n        autoFocus: false,\n        enforceFocus: false,\n        isOpen: isOpen,\n        position: Position.BOTTOM_LEFT\n      }, popoverProps, {\n        className: classNames(listProps.className, popoverProps.className),\n        onInteraction: _this.handlePopoverInteraction,\n        popoverClassName: classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName),\n        onOpening: _this.handlePopoverOpening,\n        onOpened: _this.handlePopoverOpened\n      }), React.createElement(InputGroup, tslib_1.__assign({\n        autoComplete: autoComplete,\n        disabled: _this.props.disabled\n      }, inputProps, {\n        inputRef: _this.refHandlers.input,\n        onChange: listProps.handleQueryChange,\n        onFocus: _this.handleInputFocus,\n        onKeyDown: _this.getTargetKeyDownHandler(handleKeyDown),\n        onKeyUp: _this.getTargetKeyUpHandler(handleKeyUp),\n        placeholder: inputPlaceholder,\n        value: inputValue\n      })), React.createElement(\"div\", {\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp\n      }, listProps.itemList));\n    };\n\n    _this.selectText = function () {\n      // wait until the input is properly focused to select the text inside of it\n      requestAnimationFrame(function () {\n        if (_this.input != null) {\n          _this.input.setSelectionRange(0, _this.input.value.length);\n        }\n      });\n    };\n\n    _this.handleInputFocus = function (event) {\n      _this.selectText(); // TODO can we leverage Popover.openOnTargetFocus for this?\n\n\n      if (!_this.props.openOnKeyDown) {\n        _this.setState({\n          isOpen: true\n        });\n      }\n\n      Utils.safeInvokeMember(_this.props.inputProps, \"onFocus\", event);\n    };\n\n    _this.handleItemSelect = function (item, event) {\n      var nextOpenState;\n\n      if (!_this.props.closeOnSelect) {\n        if (_this.input != null) {\n          _this.input.focus();\n        }\n\n        _this.selectText();\n\n        nextOpenState = true;\n      } else {\n        if (_this.input != null) {\n          _this.input.blur();\n        }\n\n        nextOpenState = false;\n      } // the internal state should only change when uncontrolled.\n\n\n      if (_this.props.selectedItem === undefined) {\n        _this.setState({\n          isOpen: nextOpenState,\n          selectedItem: item\n        });\n      } else {\n        // otherwise just set the next open state.\n        _this.setState({\n          isOpen: nextOpenState\n        });\n      }\n\n      Utils.safeInvoke(_this.props.onItemSelect, item, event);\n    };\n\n    _this.handlePopoverInteraction = function (nextOpenState) {\n      return requestAnimationFrame(function () {\n        if (_this.input != null && _this.input !== document.activeElement) {\n          // the input is no longer focused so we can close the popover\n          _this.setState({\n            isOpen: false\n          });\n        }\n\n        Utils.safeInvokeMember(_this.props.popoverProps, \"onInteraction\", nextOpenState);\n      });\n    };\n\n    _this.handlePopoverOpening = function (node) {\n      // reset query before opening instead of when closing to prevent flash of unfiltered items.\n      // this is a limitation of the interactions between QueryList state and Popover transitions.\n      if (_this.props.resetOnClose && _this.queryList) {\n        _this.queryList.setQuery(\"\", true);\n      }\n\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onOpening\", node);\n    };\n\n    _this.handlePopoverOpened = function (node) {\n      // scroll active item into view after popover transition completes and all dimensions are stable.\n      if (_this.queryList != null) {\n        _this.queryList.scrollActiveItemIntoView();\n      }\n\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onOpened\", node);\n    };\n\n    _this.getTargetKeyDownHandler = function (handleQueryListKeyDown) {\n      return function (evt) {\n        var which = evt.which;\n\n        if (which === Keys.ESCAPE || which === Keys.TAB) {\n          if (_this.input != null) {\n            _this.input.blur();\n          }\n\n          _this.setState({\n            isOpen: false\n          });\n        } else if (_this.props.openOnKeyDown && which !== Keys.BACKSPACE && which !== Keys.ARROW_LEFT && which !== Keys.ARROW_RIGHT) {\n          _this.setState({\n            isOpen: true\n          });\n        }\n\n        if (_this.state.isOpen) {\n          Utils.safeInvoke(handleQueryListKeyDown, evt);\n        }\n\n        Utils.safeInvokeMember(_this.props.inputProps, \"onKeyDown\", evt);\n      };\n    };\n\n    _this.getTargetKeyUpHandler = function (handleQueryListKeyUp) {\n      return function (evt) {\n        if (_this.state.isOpen) {\n          Utils.safeInvoke(handleQueryListKeyUp, evt);\n        }\n\n        Utils.safeInvokeMember(_this.props.inputProps, \"onKeyUp\", evt);\n      };\n    };\n\n    return _this;\n  }\n\n  Suggest.ofType = function () {\n    return Suggest;\n  };\n\n  Suggest.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n        disabled = _a.disabled,\n        inputProps = _a.inputProps,\n        popoverProps = _a.popoverProps,\n        restProps = tslib_1.__rest(_a, [\"disabled\", \"inputProps\", \"popoverProps\"]);\n\n    return React.createElement(this.TypedQueryList, tslib_1.__assign({}, restProps, {\n      onItemSelect: this.handleItemSelect,\n      ref: this.refHandlers.queryList,\n      renderer: this.renderQueryList\n    }));\n  };\n\n  Suggest.prototype.componentDidUpdate = function (_prevProps, prevState) {\n    // If the selected item prop changes, update the underlying state.\n    if (this.props.selectedItem !== undefined && this.props.selectedItem !== this.state.selectedItem) {\n      this.setState({\n        selectedItem: this.props.selectedItem\n      });\n    }\n\n    if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n      this.queryList.scrollActiveItemIntoView();\n    }\n  };\n\n  Suggest.prototype.getInitialSelectedItem = function () {\n    // controlled > uncontrolled > default\n    if (this.props.selectedItem !== undefined) {\n      return this.props.selectedItem;\n    } else if (this.props.defaultSelectedItem !== undefined) {\n      return this.props.defaultSelectedItem;\n    } else {\n      return null;\n    }\n  };\n\n  Suggest.displayName = DISPLAYNAME_PREFIX + \".Suggest\";\n  Suggest.defaultProps = {\n    closeOnSelect: true,\n    fill: false,\n    openOnKeyDown: false,\n    resetOnClose: false\n  };\n  return Suggest;\n}(React.PureComponent);\n\nexport { Suggest };","map":{"version":3,"sources":["../../../../src/components/select/suggest.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, InputGroup, Keys, Popover, Position, Utils, } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\nvar Suggest = /** @class */ (function (_super) {\n    tslib_1.__extends(Suggest, _super);\n    function Suggest() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            isOpen: (_this.props.popoverProps != null && _this.props.popoverProps.isOpen) || false,\n            selectedItem: _this.getInitialSelectedItem(),\n        };\n        _this.TypedQueryList = QueryList.ofType();\n        _this.input = null;\n        _this.queryList = null;\n        _this.refHandlers = {\n            input: function (ref) {\n                _this.input = ref;\n                Utils.safeInvokeMember(_this.props.inputProps, \"inputRef\", ref);\n            },\n            queryList: function (ref) { return (_this.queryList = ref); },\n        };\n        _this.renderQueryList = function (listProps) {\n            var _a = _this.props, fill = _a.fill, _b = _a.inputProps, inputProps = _b === void 0 ? {} : _b, _c = _a.popoverProps, popoverProps = _c === void 0 ? {} : _c;\n            var _d = _this.state, isOpen = _d.isOpen, selectedItem = _d.selectedItem;\n            var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;\n            var _e = inputProps.autoComplete, autoComplete = _e === void 0 ? \"off\" : _e, _f = inputProps.placeholder, placeholder = _f === void 0 ? \"Search...\" : _f;\n            var selectedItemText = selectedItem ? _this.props.inputValueRenderer(selectedItem) : \"\";\n            // placeholder shows selected item while open.\n            var inputPlaceholder = isOpen && selectedItemText ? selectedItemText : placeholder;\n            // value shows query when open, and query remains when closed if nothing is selected.\n            // if resetOnClose is enabled, then hide query when not open. (see handlePopoverOpening)\n            var inputValue = isOpen\n                ? listProps.query\n                : selectedItemText || (_this.props.resetOnClose ? \"\" : listProps.query);\n            if (fill) {\n                popoverProps.fill = true;\n                inputProps.fill = true;\n            }\n            return (React.createElement(Popover, tslib_1.__assign({ autoFocus: false, enforceFocus: false, isOpen: isOpen, position: Position.BOTTOM_LEFT }, popoverProps, { className: classNames(listProps.className, popoverProps.className), onInteraction: _this.handlePopoverInteraction, popoverClassName: classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName), onOpening: _this.handlePopoverOpening, onOpened: _this.handlePopoverOpened }),\n                React.createElement(InputGroup, tslib_1.__assign({ autoComplete: autoComplete, disabled: _this.props.disabled }, inputProps, { inputRef: _this.refHandlers.input, onChange: listProps.handleQueryChange, onFocus: _this.handleInputFocus, onKeyDown: _this.getTargetKeyDownHandler(handleKeyDown), onKeyUp: _this.getTargetKeyUpHandler(handleKeyUp), placeholder: inputPlaceholder, value: inputValue })),\n                React.createElement(\"div\", { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp }, listProps.itemList)));\n        };\n        _this.selectText = function () {\n            // wait until the input is properly focused to select the text inside of it\n            requestAnimationFrame(function () {\n                if (_this.input != null) {\n                    _this.input.setSelectionRange(0, _this.input.value.length);\n                }\n            });\n        };\n        _this.handleInputFocus = function (event) {\n            _this.selectText();\n            // TODO can we leverage Popover.openOnTargetFocus for this?\n            if (!_this.props.openOnKeyDown) {\n                _this.setState({ isOpen: true });\n            }\n            Utils.safeInvokeMember(_this.props.inputProps, \"onFocus\", event);\n        };\n        _this.handleItemSelect = function (item, event) {\n            var nextOpenState;\n            if (!_this.props.closeOnSelect) {\n                if (_this.input != null) {\n                    _this.input.focus();\n                }\n                _this.selectText();\n                nextOpenState = true;\n            }\n            else {\n                if (_this.input != null) {\n                    _this.input.blur();\n                }\n                nextOpenState = false;\n            }\n            // the internal state should only change when uncontrolled.\n            if (_this.props.selectedItem === undefined) {\n                _this.setState({\n                    isOpen: nextOpenState,\n                    selectedItem: item,\n                });\n            }\n            else {\n                // otherwise just set the next open state.\n                _this.setState({ isOpen: nextOpenState });\n            }\n            Utils.safeInvoke(_this.props.onItemSelect, item, event);\n        };\n        _this.handlePopoverInteraction = function (nextOpenState) {\n            return requestAnimationFrame(function () {\n                if (_this.input != null && _this.input !== document.activeElement) {\n                    // the input is no longer focused so we can close the popover\n                    _this.setState({ isOpen: false });\n                }\n                Utils.safeInvokeMember(_this.props.popoverProps, \"onInteraction\", nextOpenState);\n            });\n        };\n        _this.handlePopoverOpening = function (node) {\n            // reset query before opening instead of when closing to prevent flash of unfiltered items.\n            // this is a limitation of the interactions between QueryList state and Popover transitions.\n            if (_this.props.resetOnClose && _this.queryList) {\n                _this.queryList.setQuery(\"\", true);\n            }\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onOpening\", node);\n        };\n        _this.handlePopoverOpened = function (node) {\n            // scroll active item into view after popover transition completes and all dimensions are stable.\n            if (_this.queryList != null) {\n                _this.queryList.scrollActiveItemIntoView();\n            }\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onOpened\", node);\n        };\n        _this.getTargetKeyDownHandler = function (handleQueryListKeyDown) {\n            return function (evt) {\n                var which = evt.which;\n                if (which === Keys.ESCAPE || which === Keys.TAB) {\n                    if (_this.input != null) {\n                        _this.input.blur();\n                    }\n                    _this.setState({ isOpen: false });\n                }\n                else if (_this.props.openOnKeyDown &&\n                    which !== Keys.BACKSPACE &&\n                    which !== Keys.ARROW_LEFT &&\n                    which !== Keys.ARROW_RIGHT) {\n                    _this.setState({ isOpen: true });\n                }\n                if (_this.state.isOpen) {\n                    Utils.safeInvoke(handleQueryListKeyDown, evt);\n                }\n                Utils.safeInvokeMember(_this.props.inputProps, \"onKeyDown\", evt);\n            };\n        };\n        _this.getTargetKeyUpHandler = function (handleQueryListKeyUp) {\n            return function (evt) {\n                if (_this.state.isOpen) {\n                    Utils.safeInvoke(handleQueryListKeyUp, evt);\n                }\n                Utils.safeInvokeMember(_this.props.inputProps, \"onKeyUp\", evt);\n            };\n        };\n        return _this;\n    }\n    Suggest.ofType = function () {\n        return Suggest;\n    };\n    Suggest.prototype.render = function () {\n        // omit props specific to this component, spread the rest.\n        var _a = this.props, disabled = _a.disabled, inputProps = _a.inputProps, popoverProps = _a.popoverProps, restProps = tslib_1.__rest(_a, [\"disabled\", \"inputProps\", \"popoverProps\"]);\n        return (React.createElement(this.TypedQueryList, tslib_1.__assign({}, restProps, { onItemSelect: this.handleItemSelect, ref: this.refHandlers.queryList, renderer: this.renderQueryList })));\n    };\n    Suggest.prototype.componentDidUpdate = function (_prevProps, prevState) {\n        // If the selected item prop changes, update the underlying state.\n        if (this.props.selectedItem !== undefined && this.props.selectedItem !== this.state.selectedItem) {\n            this.setState({ selectedItem: this.props.selectedItem });\n        }\n        if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n    };\n    Suggest.prototype.getInitialSelectedItem = function () {\n        // controlled > uncontrolled > default\n        if (this.props.selectedItem !== undefined) {\n            return this.props.selectedItem;\n        }\n        else if (this.props.defaultSelectedItem !== undefined) {\n            return this.props.defaultSelectedItem;\n        }\n        else {\n            return null;\n        }\n    };\n    Suggest.displayName = DISPLAYNAME_PREFIX + \".Suggest\";\n    Suggest.defaultProps = {\n        closeOnSelect: true,\n        fill: false,\n        openOnKeyDown: false,\n        resetOnClose: false,\n    };\n    return Suggest;\n}(React.PureComponent));\nexport { Suggest };\n//# sourceMappingURL=suggest.js.map"]},"metadata":{},"sourceType":"module"}