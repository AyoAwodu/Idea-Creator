{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction TablePlugin() {\n  return {\n    schema: {\n      blocks: {\n        \"table-cell\": {\n          data: {\n            align: function align(_align) {\n              return [\"left\", \"center\", \"right\"].includes(_align);\n            }\n          },\n          normalize: function normalize(change, error) {\n            if (error.code === \"node_data_invalid\") {\n              change.setNodeByKey(error.node.key, {\n                data: error.node.data.set(\"align\", \"left\")\n              });\n            }\n          }\n        }\n      }\n    },\n    commands: {\n      setColumnAlign: function setColumnAlign(editor, align) {\n        var pos = editor.getPosition(editor.value);\n        var columnCells = editor.getCellsAtColumn(pos.table, pos.getColumnIndex());\n        columnCells.forEach(function (cell) {\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              align: align\n            })\n          });\n        });\n        return editor;\n      },\n      clearSelectedColumn: function clearSelectedColumn(editor, table, columnIndex) {\n        var cells = editor.getCellsAtColumn(table, columnIndex);\n        cells.forEach(function (cell) {\n          if (!cell) return;\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              selected: undefined\n            })\n          });\n        });\n      },\n      clearSelectedRow: function clearSelectedRow(editor, table, rowIndex) {\n        var cells = editor.getCellsAtRow(table, rowIndex);\n        cells.forEach(function (cell) {\n          if (!cell) return;\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              selected: undefined\n            })\n          });\n        });\n      },\n      resetAlign: function resetAlign(editor, table, rowIndex) {\n        var headCells = editor.getCellsAtRow(table, 0); // we need to re-query position as the table has been edited\n        // since it was originally queried (pre-insert)\n\n        var position = editor.getPositionByKey(editor.value.document, table.key);\n        var cells = editor.getCellsAtRow(position.table, rowIndex); // take the alignment data from the head cells and map onto\n        // the individual data cells\n\n        cells.forEach(function (cell, index) {\n          var headCell = headCells.get(index);\n          var data = headCell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              selected: undefined\n            })\n          });\n        });\n      },\n      clearSelected: function clearSelected(editor, table) {\n        var previouslySelectedRows = table.data.get(\"selectedRows\") || [];\n        var previouslySelectedColumns = table.data.get(\"selectedColumns\") || [];\n        editor.withoutSaving(function () {\n          previouslySelectedRows.forEach(function (rowIndex) {\n            editor.clearSelectedRow(table, rowIndex);\n          });\n          previouslySelectedColumns.forEach(function (columnIndex) {\n            editor.clearSelectedColumn(table, columnIndex);\n          });\n\n          if (previouslySelectedRows.length || previouslySelectedColumns.length) {\n            editor.setNodeByKey(table.key, {\n              data: {\n                selectedTable: false,\n                selectedColumns: [],\n                selectedRows: []\n              }\n            });\n          }\n        });\n        return editor;\n      },\n      selectColumn: function selectColumn(editor, selected) {\n        var pos = editor.getPosition(editor.value);\n        var selectedColumn = pos.getColumnIndex();\n        editor.withoutSaving(function () {\n          editor.clearSelected(pos.table);\n          editor.setNodeByKey(pos.table.key, {\n            data: {\n              selectedColumns: selected ? [selectedColumn] : [],\n              selectedRows: []\n            }\n          });\n          var cells = editor.getCellsAtColumn(pos.table, selectedColumn);\n          cells.forEach(function (cell) {\n            var data = cell.data.toObject();\n            editor.setNodeByKey(cell.key, {\n              data: _extends({}, data, {\n                selected: selected\n              })\n            });\n          });\n        });\n        return editor;\n      },\n      selectRow: function selectRow(editor, selected) {\n        var pos = editor.getPosition(editor.value);\n        var selectedRow = pos.getRowIndex();\n        editor.withoutSaving(function () {\n          editor.clearSelected(pos.table);\n          editor.setNodeByKey(pos.table.key, {\n            data: {\n              selectedColumns: [],\n              selectedRows: selected ? [selectedRow] : []\n            }\n          });\n          var cells = editor.getCellsAtRow(pos.table, selectedRow);\n          cells.forEach(function (cell) {\n            var data = cell.data.toObject();\n            editor.setNodeByKey(cell.key, {\n              data: _extends({}, data, {\n                selected: selected\n              })\n            });\n          });\n        });\n        return editor;\n      },\n      selectAll: function selectAll(editor) {\n        var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var pos = editor.getPosition(editor.value);\n        editor.withoutSaving(function () {\n          editor.withoutNormalizing(function () {\n            var width = pos.getWidth();\n            var height = pos.getHeight();\n            var data = {\n              selectedTable: true,\n              selectedColumns: Array.from(Array(width).keys()),\n              selectedRows: Array.from(Array(height).keys())\n            };\n            editor.setNodeByKey(pos.table.key, {\n              data: data\n            });\n\n            for (var y = 0; y < pos.getHeight(); y++) {\n              var cells = editor.getCellsAtRow(pos.table, y);\n              cells.forEach(function (cell) {\n                var data = cell.data.toObject();\n                editor.setNodeByKey(cell.key, {\n                  data: _extends({}, data, {\n                    selected: selected\n                  })\n                });\n              });\n            }\n          });\n        });\n      }\n    }\n  };\n}\n\nexports.default = TablePlugin;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/awehook-rich-markdown-editor/lib/plugins/Table.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","TablePlugin","schema","blocks","data","align","_align","includes","normalize","change","error","code","setNodeByKey","node","set","commands","setColumnAlign","editor","pos","getPosition","columnCells","getCellsAtColumn","table","getColumnIndex","forEach","cell","toObject","clearSelectedColumn","columnIndex","cells","selected","undefined","clearSelectedRow","rowIndex","getCellsAtRow","resetAlign","headCells","position","getPositionByKey","document","index","headCell","get","clearSelected","previouslySelectedRows","previouslySelectedColumns","withoutSaving","selectedTable","selectedColumns","selectedRows","selectColumn","selectedColumn","selectRow","selectedRow","getRowIndex","selectAll","withoutNormalizing","width","getWidth","height","getHeight","Array","from","keys","y","default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction TablePlugin() {\n  return {\n    schema: {\n      blocks: {\n        \"table-cell\": {\n          data: {\n            align: function align(_align) {\n              return [\"left\", \"center\", \"right\"].includes(_align);\n            }\n          },\n          normalize: function normalize(change, error) {\n            if (error.code === \"node_data_invalid\") {\n              change.setNodeByKey(error.node.key, {\n                data: error.node.data.set(\"align\", \"left\")\n              });\n            }\n          }\n        }\n      }\n    },\n\n    commands: {\n      setColumnAlign: function setColumnAlign(editor, align) {\n        var pos = editor.getPosition(editor.value);\n        var columnCells = editor.getCellsAtColumn(pos.table, pos.getColumnIndex());\n\n        columnCells.forEach(function (cell) {\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, { data: _extends({}, data, { align: align }) });\n        });\n        return editor;\n      },\n      clearSelectedColumn: function clearSelectedColumn(editor, table, columnIndex) {\n        var cells = editor.getCellsAtColumn(table, columnIndex);\n\n        cells.forEach(function (cell) {\n          if (!cell) return;\n\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              selected: undefined\n            })\n          });\n        });\n      },\n      clearSelectedRow: function clearSelectedRow(editor, table, rowIndex) {\n        var cells = editor.getCellsAtRow(table, rowIndex);\n\n        cells.forEach(function (cell) {\n          if (!cell) return;\n\n          var data = cell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, {\n              selected: undefined\n            })\n          });\n        });\n      },\n      resetAlign: function resetAlign(editor, table, rowIndex) {\n        var headCells = editor.getCellsAtRow(table, 0);\n\n        // we need to re-query position as the table has been edited\n        // since it was originally queried (pre-insert)\n        var position = editor.getPositionByKey(editor.value.document, table.key);\n        var cells = editor.getCellsAtRow(position.table, rowIndex);\n\n        // take the alignment data from the head cells and map onto\n        // the individual data cells\n        cells.forEach(function (cell, index) {\n          var headCell = headCells.get(index);\n          var data = headCell.data.toObject();\n          editor.setNodeByKey(cell.key, {\n            data: _extends({}, data, { selected: undefined })\n          });\n        });\n      },\n      clearSelected: function clearSelected(editor, table) {\n        var previouslySelectedRows = table.data.get(\"selectedRows\") || [];\n        var previouslySelectedColumns = table.data.get(\"selectedColumns\") || [];\n\n        editor.withoutSaving(function () {\n          previouslySelectedRows.forEach(function (rowIndex) {\n            editor.clearSelectedRow(table, rowIndex);\n          });\n\n          previouslySelectedColumns.forEach(function (columnIndex) {\n            editor.clearSelectedColumn(table, columnIndex);\n          });\n\n          if (previouslySelectedRows.length || previouslySelectedColumns.length) {\n            editor.setNodeByKey(table.key, {\n              data: {\n                selectedTable: false,\n                selectedColumns: [],\n                selectedRows: []\n              }\n            });\n          }\n        });\n\n        return editor;\n      },\n      selectColumn: function selectColumn(editor, selected) {\n        var pos = editor.getPosition(editor.value);\n        var selectedColumn = pos.getColumnIndex();\n\n        editor.withoutSaving(function () {\n          editor.clearSelected(pos.table);\n\n          editor.setNodeByKey(pos.table.key, {\n            data: {\n              selectedColumns: selected ? [selectedColumn] : [],\n              selectedRows: []\n            }\n          });\n\n          var cells = editor.getCellsAtColumn(pos.table, selectedColumn);\n\n          cells.forEach(function (cell) {\n            var data = cell.data.toObject();\n            editor.setNodeByKey(cell.key, {\n              data: _extends({}, data, {\n                selected: selected\n              })\n            });\n          });\n        });\n\n        return editor;\n      },\n      selectRow: function selectRow(editor, selected) {\n        var pos = editor.getPosition(editor.value);\n        var selectedRow = pos.getRowIndex();\n\n        editor.withoutSaving(function () {\n          editor.clearSelected(pos.table);\n\n          editor.setNodeByKey(pos.table.key, {\n            data: {\n              selectedColumns: [],\n              selectedRows: selected ? [selectedRow] : []\n            }\n          });\n\n          var cells = editor.getCellsAtRow(pos.table, selectedRow);\n\n          cells.forEach(function (cell) {\n            var data = cell.data.toObject();\n            editor.setNodeByKey(cell.key, {\n              data: _extends({}, data, {\n                selected: selected\n              })\n            });\n          });\n        });\n\n        return editor;\n      },\n      selectAll: function selectAll(editor) {\n        var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        var pos = editor.getPosition(editor.value);\n\n        editor.withoutSaving(function () {\n          editor.withoutNormalizing(function () {\n            var width = pos.getWidth();\n            var height = pos.getHeight();\n            var data = {\n              selectedTable: true,\n              selectedColumns: Array.from(Array(width).keys()),\n              selectedRows: Array.from(Array(height).keys())\n            };\n\n            editor.setNodeByKey(pos.table.key, { data: data });\n\n            for (var y = 0; y < pos.getHeight(); y++) {\n              var cells = editor.getCellsAtRow(pos.table, y);\n\n              cells.forEach(function (cell) {\n                var data = cell.data.toObject();\n                editor.setNodeByKey(cell.key, {\n                  data: _extends({}, data, {\n                    selected: selected\n                  })\n                });\n              });\n            }\n          });\n        });\n      }\n    }\n  };\n}\nexports.default = TablePlugin;"]},"metadata":{},"sourceType":"script"}