{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Button, DISPLAYNAME_PREFIX, InputGroup, Keys, Popover, Position, Utils } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\n\nvar Select =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Select, _super);\n\n  function Select() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.TypedQueryList = QueryList.ofType();\n    _this.input = null;\n    _this.queryList = null;\n    _this.refHandlers = {\n      input: function (ref) {\n        _this.input = ref;\n        Utils.safeInvokeMember(_this.props.inputProps, \"inputRef\", ref);\n      },\n      queryList: function (ref) {\n        return _this.queryList = ref;\n      }\n    };\n\n    _this.renderQueryList = function (listProps) {\n      // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n      var _a = _this.props,\n          _b = _a.filterable,\n          filterable = _b === void 0 ? true : _b,\n          _c = _a.disabled,\n          disabled = _c === void 0 ? false : _c,\n          _d = _a.inputProps,\n          inputProps = _d === void 0 ? {} : _d,\n          _e = _a.popoverProps,\n          popoverProps = _e === void 0 ? {} : _e;\n      var input = React.createElement(InputGroup, tslib_1.__assign({\n        leftIcon: \"search\",\n        placeholder: \"Filter...\",\n        rightElement: _this.maybeRenderClearButton(listProps.query)\n      }, inputProps, {\n        inputRef: _this.refHandlers.input,\n        onChange: listProps.handleQueryChange,\n        value: listProps.query\n      }));\n      var handleKeyDown = listProps.handleKeyDown,\n          handleKeyUp = listProps.handleKeyUp;\n      return React.createElement(Popover, tslib_1.__assign({\n        autoFocus: false,\n        enforceFocus: false,\n        isOpen: _this.state.isOpen,\n        disabled: disabled,\n        position: Position.BOTTOM_LEFT\n      }, popoverProps, {\n        className: classNames(listProps.className, popoverProps.className),\n        onInteraction: _this.handlePopoverInteraction,\n        popoverClassName: classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName),\n        onOpening: _this.handlePopoverOpening,\n        onOpened: _this.handlePopoverOpened,\n        onClosing: _this.handlePopoverClosing\n      }), React.createElement(\"div\", {\n        onKeyDown: _this.state.isOpen ? handleKeyDown : _this.handleTargetKeyDown,\n        onKeyUp: _this.state.isOpen ? handleKeyUp : undefined\n      }, _this.props.children), React.createElement(\"div\", {\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp\n      }, filterable ? input : undefined, listProps.itemList));\n    };\n\n    _this.handleTargetKeyDown = function (event) {\n      // open popover when arrow key pressed on target while closed\n      if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n        event.preventDefault();\n\n        _this.setState({\n          isOpen: true\n        });\n      }\n    };\n\n    _this.handleItemSelect = function (item, event) {\n      _this.setState({\n        isOpen: false\n      });\n\n      Utils.safeInvoke(_this.props.onItemSelect, item, event);\n    };\n\n    _this.handlePopoverInteraction = function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onInteraction\", isOpen);\n    };\n\n    _this.handlePopoverOpening = function (node) {\n      // save currently focused element before popover steals focus, so we can restore it when closing.\n      _this.previousFocusedElement = document.activeElement;\n\n      if (_this.props.resetOnClose) {\n        _this.resetQuery();\n      }\n\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onOpening\", node);\n    };\n\n    _this.handlePopoverOpened = function (node) {\n      // scroll active item into view after popover transition completes and all dimensions are stable.\n      if (_this.queryList != null) {\n        _this.queryList.scrollActiveItemIntoView();\n      }\n\n      requestAnimationFrame(function () {\n        var _a = _this.props.inputProps,\n            inputProps = _a === void 0 ? {} : _a; // autofocus is enabled by default\n\n        if (inputProps.autoFocus !== false && _this.input != null) {\n          _this.input.focus();\n        }\n      });\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onOpened\", node);\n    };\n\n    _this.handlePopoverClosing = function (node) {\n      // restore focus to saved element.\n      // timeout allows popover to begin closing and remove focus handlers beforehand.\n      requestAnimationFrame(function () {\n        if (_this.previousFocusedElement !== undefined) {\n          _this.previousFocusedElement.focus();\n\n          _this.previousFocusedElement = undefined;\n        }\n      });\n      Utils.safeInvokeMember(_this.props.popoverProps, \"onClosing\", node);\n    };\n\n    _this.resetQuery = function () {\n      return _this.queryList && _this.queryList.setQuery(\"\", true);\n    };\n\n    return _this;\n  }\n\n  Select.ofType = function () {\n    return Select;\n  };\n\n  Select.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n        filterable = _a.filterable,\n        inputProps = _a.inputProps,\n        popoverProps = _a.popoverProps,\n        restProps = tslib_1.__rest(_a, [\"filterable\", \"inputProps\", \"popoverProps\"]);\n\n    return React.createElement(this.TypedQueryList, tslib_1.__assign({}, restProps, {\n      onItemSelect: this.handleItemSelect,\n      ref: this.refHandlers.queryList,\n      renderer: this.renderQueryList\n    }));\n  };\n\n  Select.prototype.componentDidUpdate = function (_prevProps, prevState) {\n    if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n      this.queryList.scrollActiveItemIntoView();\n    }\n  };\n\n  Select.prototype.maybeRenderClearButton = function (query) {\n    return query.length > 0 ? React.createElement(Button, {\n      icon: \"cross\",\n      minimal: true,\n      onClick: this.resetQuery\n    }) : undefined;\n  };\n\n  Select.displayName = DISPLAYNAME_PREFIX + \".Select\";\n  return Select;\n}(React.PureComponent);\n\nexport { Select };","map":{"version":3,"sources":["../../../../src/components/select/select.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Button, DISPLAYNAME_PREFIX, InputGroup, Keys, Popover, Position, Utils, } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\nvar Select = /** @class */ (function (_super) {\n    tslib_1.__extends(Select, _super);\n    function Select() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { isOpen: false };\n        _this.TypedQueryList = QueryList.ofType();\n        _this.input = null;\n        _this.queryList = null;\n        _this.refHandlers = {\n            input: function (ref) {\n                _this.input = ref;\n                Utils.safeInvokeMember(_this.props.inputProps, \"inputRef\", ref);\n            },\n            queryList: function (ref) { return (_this.queryList = ref); },\n        };\n        _this.renderQueryList = function (listProps) {\n            // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n            var _a = _this.props, _b = _a.filterable, filterable = _b === void 0 ? true : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.inputProps, inputProps = _d === void 0 ? {} : _d, _e = _a.popoverProps, popoverProps = _e === void 0 ? {} : _e;\n            var input = (React.createElement(InputGroup, tslib_1.__assign({ leftIcon: \"search\", placeholder: \"Filter...\", rightElement: _this.maybeRenderClearButton(listProps.query) }, inputProps, { inputRef: _this.refHandlers.input, onChange: listProps.handleQueryChange, value: listProps.query })));\n            var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;\n            return (React.createElement(Popover, tslib_1.__assign({ autoFocus: false, enforceFocus: false, isOpen: _this.state.isOpen, disabled: disabled, position: Position.BOTTOM_LEFT }, popoverProps, { className: classNames(listProps.className, popoverProps.className), onInteraction: _this.handlePopoverInteraction, popoverClassName: classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName), onOpening: _this.handlePopoverOpening, onOpened: _this.handlePopoverOpened, onClosing: _this.handlePopoverClosing }),\n                React.createElement(\"div\", { onKeyDown: _this.state.isOpen ? handleKeyDown : _this.handleTargetKeyDown, onKeyUp: _this.state.isOpen ? handleKeyUp : undefined }, _this.props.children),\n                React.createElement(\"div\", { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp },\n                    filterable ? input : undefined,\n                    listProps.itemList)));\n        };\n        _this.handleTargetKeyDown = function (event) {\n            // open popover when arrow key pressed on target while closed\n            if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n                event.preventDefault();\n                _this.setState({ isOpen: true });\n            }\n        };\n        _this.handleItemSelect = function (item, event) {\n            _this.setState({ isOpen: false });\n            Utils.safeInvoke(_this.props.onItemSelect, item, event);\n        };\n        _this.handlePopoverInteraction = function (isOpen) {\n            _this.setState({ isOpen: isOpen });\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onInteraction\", isOpen);\n        };\n        _this.handlePopoverOpening = function (node) {\n            // save currently focused element before popover steals focus, so we can restore it when closing.\n            _this.previousFocusedElement = document.activeElement;\n            if (_this.props.resetOnClose) {\n                _this.resetQuery();\n            }\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onOpening\", node);\n        };\n        _this.handlePopoverOpened = function (node) {\n            // scroll active item into view after popover transition completes and all dimensions are stable.\n            if (_this.queryList != null) {\n                _this.queryList.scrollActiveItemIntoView();\n            }\n            requestAnimationFrame(function () {\n                var _a = _this.props.inputProps, inputProps = _a === void 0 ? {} : _a;\n                // autofocus is enabled by default\n                if (inputProps.autoFocus !== false && _this.input != null) {\n                    _this.input.focus();\n                }\n            });\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onOpened\", node);\n        };\n        _this.handlePopoverClosing = function (node) {\n            // restore focus to saved element.\n            // timeout allows popover to begin closing and remove focus handlers beforehand.\n            requestAnimationFrame(function () {\n                if (_this.previousFocusedElement !== undefined) {\n                    _this.previousFocusedElement.focus();\n                    _this.previousFocusedElement = undefined;\n                }\n            });\n            Utils.safeInvokeMember(_this.props.popoverProps, \"onClosing\", node);\n        };\n        _this.resetQuery = function () { return _this.queryList && _this.queryList.setQuery(\"\", true); };\n        return _this;\n    }\n    Select.ofType = function () {\n        return Select;\n    };\n    Select.prototype.render = function () {\n        // omit props specific to this component, spread the rest.\n        var _a = this.props, filterable = _a.filterable, inputProps = _a.inputProps, popoverProps = _a.popoverProps, restProps = tslib_1.__rest(_a, [\"filterable\", \"inputProps\", \"popoverProps\"]);\n        return (React.createElement(this.TypedQueryList, tslib_1.__assign({}, restProps, { onItemSelect: this.handleItemSelect, ref: this.refHandlers.queryList, renderer: this.renderQueryList })));\n    };\n    Select.prototype.componentDidUpdate = function (_prevProps, prevState) {\n        if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n    };\n    Select.prototype.maybeRenderClearButton = function (query) {\n        return query.length > 0 ? React.createElement(Button, { icon: \"cross\", minimal: true, onClick: this.resetQuery }) : undefined;\n    };\n    Select.displayName = DISPLAYNAME_PREFIX + \".Select\";\n    return Select;\n}(React.PureComponent));\nexport { Select };\n//# sourceMappingURL=select.js.map"]},"metadata":{},"sourceType":"module"}