{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _options = require('./options');\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _validation = require('./validation');\n\nvar _changes = require('./changes');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/**\n * Returns the core of the plugin, limited to the validation and normalization\n * part of `slate-edit-list`, and utils.\n *\n * Import this directly: `import EditListCore from 'slate-edit-table/lib/core'`\n * if you don't care about behavior/rendering and you\n * are only manipulating `Slate.Values` without rendering them.\n * That way you do not depend on importing `slate-react`.\n */\n\n\nfunction core() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  opts = new _options2.default(opts);\n  return {\n    schema: (0, _validation.schema)(opts),\n    normalizeNode: (0, _validation.normalizeNode)(opts),\n    utils: {\n      getCurrentItem: _utils.getCurrentItem.bind(null, opts),\n      getCurrentList: _utils.getCurrentList.bind(null, opts),\n      getItemDepth: _utils.getItemDepth.bind(null, opts),\n      getItemsAtRange: _utils.getItemsAtRange.bind(null, opts),\n      getPreviousItem: _utils.getPreviousItem.bind(null, opts),\n      isList: _utils.isList.bind(null, opts),\n      isSelectionInList: _utils.isSelectionInList.bind(null, opts)\n    },\n    changes: {\n      decreaseItemDepth: bindAndScopeChange(opts, _changes.decreaseItemDepth),\n      increaseItemDepth: bindAndScopeChange(opts, _changes.increaseItemDepth),\n      splitListItem: bindAndScopeChange(opts, _changes.splitListItem),\n      unwrapList: bindAndScopeChange(opts, _changes.unwrapList),\n      wrapInList: _changes.wrapInList.bind(null, opts),\n      toggleList: _changes.toggleList.bind(null, opts)\n    }\n  };\n}\n/**\n * Bind a change to given options, and scope it to act only inside a list\n */\n\n\nfunction bindAndScopeChange(opts, fn) {\n  return function (change) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var value = change.value;\n\n    if (!(0, _utils.isSelectionInList)(opts, value)) {\n      return change;\n    } // $FlowFixMe\n\n\n    return fn.apply(undefined, _toConsumableArray([opts, change].concat(args)));\n  };\n}\n\nexports.default = core;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@tommoor/slate-edit-list/dist/core.js"],"names":["Object","defineProperty","exports","value","_options","require","_options2","_interopRequireDefault","_validation","_changes","_utils","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","core","opts","arguments","undefined","schema","normalizeNode","utils","getCurrentItem","bind","getCurrentList","getItemDepth","getItemsAtRange","getPreviousItem","isList","isSelectionInList","changes","decreaseItemDepth","bindAndScopeChange","increaseItemDepth","splitListItem","unwrapList","wrapInList","toggleList","fn","change","_len","args","_key","apply","concat"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _options = require('./options');\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _validation = require('./validation');\n\nvar _changes = require('./changes');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Returns the core of the plugin, limited to the validation and normalization\n * part of `slate-edit-list`, and utils.\n *\n * Import this directly: `import EditListCore from 'slate-edit-table/lib/core'`\n * if you don't care about behavior/rendering and you\n * are only manipulating `Slate.Values` without rendering them.\n * That way you do not depend on importing `slate-react`.\n */\nfunction core() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    opts = new _options2.default(opts);\n\n    return {\n        schema: (0, _validation.schema)(opts),\n        normalizeNode: (0, _validation.normalizeNode)(opts),\n\n        utils: {\n            getCurrentItem: _utils.getCurrentItem.bind(null, opts),\n            getCurrentList: _utils.getCurrentList.bind(null, opts),\n            getItemDepth: _utils.getItemDepth.bind(null, opts),\n            getItemsAtRange: _utils.getItemsAtRange.bind(null, opts),\n            getPreviousItem: _utils.getPreviousItem.bind(null, opts),\n            isList: _utils.isList.bind(null, opts),\n            isSelectionInList: _utils.isSelectionInList.bind(null, opts)\n        },\n\n        changes: {\n            decreaseItemDepth: bindAndScopeChange(opts, _changes.decreaseItemDepth),\n            increaseItemDepth: bindAndScopeChange(opts, _changes.increaseItemDepth),\n            splitListItem: bindAndScopeChange(opts, _changes.splitListItem),\n            unwrapList: bindAndScopeChange(opts, _changes.unwrapList),\n            wrapInList: _changes.wrapInList.bind(null, opts),\n            toggleList: _changes.toggleList.bind(null, opts)\n        }\n    };\n}\n\n/**\n * Bind a change to given options, and scope it to act only inside a list\n */\nfunction bindAndScopeChange(opts, fn) {\n    return function (change) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n        }\n\n        var value = change.value;\n\n\n        if (!(0, _utils.isSelectionInList)(opts, value)) {\n            return change;\n        }\n\n        // $FlowFixMe\n        return fn.apply(undefined, _toConsumableArray([opts, change].concat(args)));\n    };\n}\n\nexports.default = core;"]},"metadata":{},"sourceType":"script"}