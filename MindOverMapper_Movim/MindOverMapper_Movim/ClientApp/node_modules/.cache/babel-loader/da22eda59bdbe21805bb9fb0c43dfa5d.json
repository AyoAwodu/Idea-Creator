{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate');\n\nvar _utils = require('../utils');\n/**\n * User pressed Enter in an editor:\n * Insert a new code line and start it with the indentation from previous line\n */\n\n\nfunction onEnter(opts, event, editor, next) {\n  var value = editor.value;\n\n  if (!value.selection.isCollapsed) {\n    return next();\n  }\n\n  event.preventDefault();\n  var startBlock = value.startBlock;\n  var currentLineText = startBlock.text;\n  var indent = (0, _utils.getIndent)(currentLineText, '');\n  return editor.splitBlock().insertText(indent).focus();\n}\n\nexports.default = onEnter;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/handlers/onEnter.js"],"names":["Object","defineProperty","exports","value","require","_utils","onEnter","opts","event","editor","next","selection","isCollapsed","preventDefault","startBlock","currentLineText","text","indent","getIndent","splitBlock","insertText","focus","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIAC,OAAO,CAAC,OAAD,CAAP;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;AAEA;;;;;;AAIA,SAASE,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AACxC,MAAIP,KAAK,GAAGM,MAAM,CAACN,KAAnB;;AAEA,MAAI,CAACA,KAAK,CAACQ,SAAN,CAAgBC,WAArB,EAAkC;AAC9B,WAAOF,IAAI,EAAX;AACH;;AAEDF,EAAAA,KAAK,CAACK,cAAN;AAEA,MAAIC,UAAU,GAAGX,KAAK,CAACW,UAAvB;AAEA,MAAIC,eAAe,GAAGD,UAAU,CAACE,IAAjC;AACA,MAAIC,MAAM,GAAG,CAAC,GAAGZ,MAAM,CAACa,SAAX,EAAsBH,eAAtB,EAAuC,EAAvC,CAAb;AAEA,SAAON,MAAM,CAACU,UAAP,GAAoBC,UAApB,CAA+BH,MAA/B,EAAuCI,KAAvC,EAAP;AACH;;AAEDnB,OAAO,CAACoB,OAAR,GAAkBhB,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nrequire('slate');\n\nvar _utils = require('../utils');\n\n/**\n * User pressed Enter in an editor:\n * Insert a new code line and start it with the indentation from previous line\n */\nfunction onEnter(opts, event, editor, next) {\n    var value = editor.value;\n\n    if (!value.selection.isCollapsed) {\n        return next();\n    }\n\n    event.preventDefault();\n\n    var startBlock = value.startBlock;\n\n    var currentLineText = startBlock.text;\n    var indent = (0, _utils.getIndent)(currentLineText, '');\n\n    return editor.splitBlock().insertText(indent).focus();\n}\n\nexports.default = onEnter;"]},"metadata":{},"sourceType":"script"}