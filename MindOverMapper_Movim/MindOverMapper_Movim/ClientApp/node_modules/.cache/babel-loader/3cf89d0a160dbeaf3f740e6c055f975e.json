{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isHotkey = require('is-hotkey');\n\nrequire('slate');\n\nvar _utils = require('../utils');\n\nvar _onTab = require('./onTab');\n\nvar _onTab2 = _interopRequireDefault(_onTab);\n\nvar _onShiftTab = require('./onShiftTab');\n\nvar _onShiftTab2 = _interopRequireDefault(_onShiftTab);\n\nvar _onEnter = require('./onEnter');\n\nvar _onEnter2 = _interopRequireDefault(_onEnter);\n\nvar _onModEnter = require('./onModEnter');\n\nvar _onModEnter2 = _interopRequireDefault(_onModEnter);\n\nvar _onBackspace = require('./onBackspace');\n\nvar _onBackspace2 = _interopRequireDefault(_onBackspace);\n\nvar _onSelectAll = require('./onSelectAll');\n\nvar _onSelectAll2 = _interopRequireDefault(_onSelectAll);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isModA = (0, _isHotkey.isKeyHotkey)('mod+a');\nvar isShiftTab = (0, _isHotkey.isKeyHotkey)('shift+tab');\nvar isTab = (0, _isHotkey.isKeyHotkey)('tab');\nvar isModEnter = (0, _isHotkey.isKeyHotkey)('mod+enter');\nvar isEnter = (0, _isHotkey.isKeyHotkey)('enter');\nvar isBackspace = (0, _isHotkey.isKeyHotkey)('backspace');\n/**\n * User is pressing a key in the editor\n */\n\nfunction onKeyDown(opts, event, editor, next) {\n  var value = editor.value;\n  var currentCode = (0, _utils.getCurrentCode)(opts, value); // Inside code ?\n\n  if (!currentCode) {\n    return next();\n  } // Add opts in the argument list\n\n\n  var args = [opts, event, editor, next]; // Select all the code in the block (Mod+a)\n\n  if (opts.selectAll && isModA(event)) {\n    return _onSelectAll2.default.apply(undefined, args);\n  } else if (isShiftTab(event)) {\n    // User is pressing Shift+Tab\n    return _onShiftTab2.default.apply(undefined, args);\n  } else if (isTab(event)) {\n    // User is pressing Tab\n    return _onTab2.default.apply(undefined, args);\n  } else if (opts.exitBlockType && isModEnter(event)) {\n    // User is pressing Mod+Enter\n    return _onModEnter2.default.apply(undefined, args);\n  } else if (isEnter(event)) {\n    // User is pressing Enter\n    return _onEnter2.default.apply(undefined, args);\n  } else if (isBackspace(event)) {\n    // User is pressing Backspace\n    return _onBackspace2.default.apply(undefined, args);\n  }\n\n  return next();\n}\n\nexports.default = onKeyDown;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/handlers/onKeyDown.js"],"names":["Object","defineProperty","exports","value","_isHotkey","require","_utils","_onTab","_onTab2","_interopRequireDefault","_onShiftTab","_onShiftTab2","_onEnter","_onEnter2","_onModEnter","_onModEnter2","_onBackspace","_onBackspace2","_onSelectAll","_onSelectAll2","obj","__esModule","default","isModA","isKeyHotkey","isShiftTab","isTab","isModEnter","isEnter","isBackspace","onKeyDown","opts","event","editor","next","currentCode","getCurrentCode","args","selectAll","apply","undefined","exitBlockType"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _isHotkey = require('is-hotkey');\n\nrequire('slate');\n\nvar _utils = require('../utils');\n\nvar _onTab = require('./onTab');\n\nvar _onTab2 = _interopRequireDefault(_onTab);\n\nvar _onShiftTab = require('./onShiftTab');\n\nvar _onShiftTab2 = _interopRequireDefault(_onShiftTab);\n\nvar _onEnter = require('./onEnter');\n\nvar _onEnter2 = _interopRequireDefault(_onEnter);\n\nvar _onModEnter = require('./onModEnter');\n\nvar _onModEnter2 = _interopRequireDefault(_onModEnter);\n\nvar _onBackspace = require('./onBackspace');\n\nvar _onBackspace2 = _interopRequireDefault(_onBackspace);\n\nvar _onSelectAll = require('./onSelectAll');\n\nvar _onSelectAll2 = _interopRequireDefault(_onSelectAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isModA = (0, _isHotkey.isKeyHotkey)('mod+a');\n\nvar isShiftTab = (0, _isHotkey.isKeyHotkey)('shift+tab');\nvar isTab = (0, _isHotkey.isKeyHotkey)('tab');\nvar isModEnter = (0, _isHotkey.isKeyHotkey)('mod+enter');\nvar isEnter = (0, _isHotkey.isKeyHotkey)('enter');\nvar isBackspace = (0, _isHotkey.isKeyHotkey)('backspace');\n\n/**\n * User is pressing a key in the editor\n */\nfunction onKeyDown(opts, event, editor, next) {\n    var value = editor.value;\n\n    var currentCode = (0, _utils.getCurrentCode)(opts, value);\n\n    // Inside code ?\n    if (!currentCode) {\n        return next();\n    }\n\n    // Add opts in the argument list\n    var args = [opts, event, editor, next];\n\n    // Select all the code in the block (Mod+a)\n    if (opts.selectAll && isModA(event)) {\n        return _onSelectAll2.default.apply(undefined, args);\n    } else if (isShiftTab(event)) {\n        // User is pressing Shift+Tab\n        return _onShiftTab2.default.apply(undefined, args);\n    } else if (isTab(event)) {\n        // User is pressing Tab\n        return _onTab2.default.apply(undefined, args);\n    } else if (opts.exitBlockType && isModEnter(event)) {\n        // User is pressing Mod+Enter\n        return _onModEnter2.default.apply(undefined, args);\n    } else if (isEnter(event)) {\n        // User is pressing Enter\n        return _onEnter2.default.apply(undefined, args);\n    } else if (isBackspace(event)) {\n        // User is pressing Backspace\n        return _onBackspace2.default.apply(undefined, args);\n    }\n    return next();\n}\n\nexports.default = onKeyDown;"]},"metadata":{},"sourceType":"script"}