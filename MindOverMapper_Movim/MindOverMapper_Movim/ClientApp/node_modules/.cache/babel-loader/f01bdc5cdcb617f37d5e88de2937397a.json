{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = KeyboardBehavior;\n\nvar _slate = require(\"slate\");\n\nvar _isModKey = require(\"../lib/isModKey\");\n\nvar _isModKey2 = _interopRequireDefault(_isModKey);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction KeyboardBehavior() {\n  function onKeyDown(ev, editor, next) {\n    if ((0, _isModKey2.default)(ev)) return next();\n\n    switch (ev.key) {\n      case \"Enter\":\n        return onEnter(ev, editor, next);\n\n      case \"Tab\":\n        return onTab(ev, editor, next);\n\n      case \"Backspace\":\n        return onBackspace(ev, editor, next);\n\n      default:\n        return next();\n    }\n  }\n\n  function onEnter(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock,\n        selection = value.selection;\n    if (selection.isExpanded) return next();\n    if (!startBlock) return next();\n    var endOffset = selection.end.offset; // Hitting enter while an image is selected should jump caret below and\n    // insert a new paragraph\n\n    if (startBlock.type === \"image\") {\n      ev.preventDefault();\n      return editor.splitBlock(10).setBlocks({\n        type: \"paragraph\",\n        text: \"\",\n        isVoid: false\n      });\n    }\n\n    if (startBlock.type.match(/(heading|block-quote)/)) {\n      ev.preventDefault(); // if the heading is collapsed then show everything now so the user\n      // isn't editing in a weird state with some content hidden\n\n      editor.showContentBelow(startBlock); // Hitting enter in a heading or blockquote will split the node at that\n      // point and make the new node a paragraph\n\n      if (endOffset > 0) {\n        return editor.splitBlock().setBlocks(\"paragraph\");\n      } else {\n        return editor.splitBlock().moveToStartOfPreviousBlock().setBlocks(\"paragraph\");\n      }\n    }\n\n    return next();\n  }\n\n  function onTab(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock;\n    if (!startBlock) return next(); // On tab, if at the end of the heading jump to the main body content\n    // as if it is another input field (act the same as enter).\n\n    if (startBlock.type === \"heading1\") {\n      ev.preventDefault();\n      return editor.splitBlock().setBlocks(\"paragraph\");\n    }\n\n    return next();\n  }\n\n  function onBackspace(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock,\n        selection = value.selection;\n    if (!startBlock) return next(); // If image or embed is selected go ahead and delete the whole block\n\n    if (startBlock.type === \"image\" || startBlock.type === \"link\") {\n      ev.preventDefault();\n      return editor.removeNodeByKey(startBlock.key).moveToStartOfNextBlock();\n    }\n\n    if (selection.isExpanded) {\n      // If we're about to remove a heading then ensure that its not collapsed\n      if (selection.start.offset === 0 && selection.end.offset === startBlock.text.length && startBlock.type.match(/heading/)) {\n        editor.showContentBelow(startBlock);\n      }\n\n      return next();\n    } // If at the start of a non-paragraph, convert it back into a paragraph\n\n\n    if (selection.start.offset === 0) {\n      if (startBlock.type === \"paragraph\" || startBlock.type === \"code-line\") return next();\n      ev.preventDefault(); // If we're about to remove a heading then ensure that its not collapsed\n\n      if (startBlock.type.match(/heading/)) {\n        editor.showContentBelow(startBlock);\n      }\n\n      editor.setBlocks(\"paragraph\");\n\n      if (startBlock.type === \"list-item\") {\n        editor.unwrapBlock(\"bulleted-list\");\n      }\n\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      var marksAtCursor = startBlock.getMarksAtRange(selection);\n      var codeMarksAtCursor = marksAtCursor.filter(function (mark) {\n        return mark.type === \"code\";\n      }); // If at the end of a code mark hitting backspace should remove the mark\n\n      if (codeMarksAtCursor.size > 0) {\n        ev.preventDefault();\n        var iterationOffset = 0;\n        var startOffset = selection.start.offset;\n        var textNode = startBlock.getTextAtOffset(startOffset);\n        var leavesUntilCode = textNode.leaves.takeUntil(function (v) {\n          iterationOffset += v.text.length;\n          return iterationOffset > startOffset;\n        });\n        var textUntilCode = leavesUntilCode.map(function (l) {\n          return l.text;\n        }).join(\"\");\n        var codeLeaf = leavesUntilCode.reverse().first();\n        if (!codeLeaf) return next();\n        if (startOffset !== textUntilCode.length) return next();\n        return editor.removeMarkByKey(textNode.key, startOffset - codeLeaf.text.length, startOffset, \"code\");\n      }\n    }\n\n    return next();\n  }\n\n  return {\n    onKeyDown: onKeyDown\n  };\n}","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/awehook-rich-markdown-editor/lib/plugins/KeyboardBehavior.js"],"names":["Object","defineProperty","exports","value","default","KeyboardBehavior","_slate","require","_isModKey","_isModKey2","_interopRequireDefault","obj","__esModule","onKeyDown","ev","editor","next","key","onEnter","onTab","onBackspace","startBlock","selection","isExpanded","endOffset","end","offset","type","preventDefault","splitBlock","setBlocks","text","isVoid","match","showContentBelow","moveToStartOfPreviousBlock","removeNodeByKey","moveToStartOfNextBlock","start","length","unwrapBlock","isCollapsed","marksAtCursor","getMarksAtRange","codeMarksAtCursor","filter","mark","size","iterationOffset","startOffset","textNode","getTextAtOffset","leavesUntilCode","leaves","takeUntil","v","textUntilCode","map","l","join","codeLeaf","reverse","first","removeMarkByKey"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = KeyboardBehavior;\n\nvar _slate = require(\"slate\");\n\nvar _isModKey = require(\"../lib/isModKey\");\n\nvar _isModKey2 = _interopRequireDefault(_isModKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction KeyboardBehavior() {\n  function onKeyDown(ev, editor, next) {\n    if ((0, _isModKey2.default)(ev)) return next();\n\n    switch (ev.key) {\n      case \"Enter\":\n        return onEnter(ev, editor, next);\n      case \"Tab\":\n        return onTab(ev, editor, next);\n      case \"Backspace\":\n        return onBackspace(ev, editor, next);\n      default:\n        return next();\n    }\n  }\n\n  function onEnter(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock,\n        selection = value.selection;\n\n    if (selection.isExpanded) return next();\n    if (!startBlock) return next();\n\n    var endOffset = selection.end.offset;\n\n    // Hitting enter while an image is selected should jump caret below and\n    // insert a new paragraph\n    if (startBlock.type === \"image\") {\n      ev.preventDefault();\n      return editor.splitBlock(10).setBlocks({\n        type: \"paragraph\",\n        text: \"\",\n        isVoid: false\n      });\n    }\n\n    if (startBlock.type.match(/(heading|block-quote)/)) {\n      ev.preventDefault();\n\n      // if the heading is collapsed then show everything now so the user\n      // isn't editing in a weird state with some content hidden\n      editor.showContentBelow(startBlock);\n\n      // Hitting enter in a heading or blockquote will split the node at that\n      // point and make the new node a paragraph\n      if (endOffset > 0) {\n        return editor.splitBlock().setBlocks(\"paragraph\");\n      } else {\n        return editor.splitBlock().moveToStartOfPreviousBlock().setBlocks(\"paragraph\");\n      }\n    }\n\n    return next();\n  }\n\n  function onTab(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock;\n\n    if (!startBlock) return next();\n\n    // On tab, if at the end of the heading jump to the main body content\n    // as if it is another input field (act the same as enter).\n    if (startBlock.type === \"heading1\") {\n      ev.preventDefault();\n      return editor.splitBlock().setBlocks(\"paragraph\");\n    }\n\n    return next();\n  }\n\n  function onBackspace(ev, editor, next) {\n    var value = editor.value;\n    var startBlock = value.startBlock,\n        selection = value.selection;\n\n    if (!startBlock) return next();\n\n    // If image or embed is selected go ahead and delete the whole block\n    if (startBlock.type === \"image\" || startBlock.type === \"link\") {\n      ev.preventDefault();\n      return editor.removeNodeByKey(startBlock.key).moveToStartOfNextBlock();\n    }\n\n    if (selection.isExpanded) {\n      // If we're about to remove a heading then ensure that its not collapsed\n      if (selection.start.offset === 0 && selection.end.offset === startBlock.text.length && startBlock.type.match(/heading/)) {\n        editor.showContentBelow(startBlock);\n      }\n\n      return next();\n    }\n\n    // If at the start of a non-paragraph, convert it back into a paragraph\n    if (selection.start.offset === 0) {\n      if (startBlock.type === \"paragraph\" || startBlock.type === \"code-line\") return next();\n      ev.preventDefault();\n\n      // If we're about to remove a heading then ensure that its not collapsed\n      if (startBlock.type.match(/heading/)) {\n        editor.showContentBelow(startBlock);\n      }\n      editor.setBlocks(\"paragraph\");\n\n      if (startBlock.type === \"list-item\") {\n        editor.unwrapBlock(\"bulleted-list\");\n      }\n\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      var marksAtCursor = startBlock.getMarksAtRange(selection);\n      var codeMarksAtCursor = marksAtCursor.filter(function (mark) {\n        return mark.type === \"code\";\n      });\n\n      // If at the end of a code mark hitting backspace should remove the mark\n      if (codeMarksAtCursor.size > 0) {\n        ev.preventDefault();\n\n        var iterationOffset = 0;\n        var startOffset = selection.start.offset;\n        var textNode = startBlock.getTextAtOffset(startOffset);\n        var leavesUntilCode = textNode.leaves.takeUntil(function (v) {\n          iterationOffset += v.text.length;\n          return iterationOffset > startOffset;\n        });\n\n        var textUntilCode = leavesUntilCode.map(function (l) {\n          return l.text;\n        }).join(\"\");\n        var codeLeaf = leavesUntilCode.reverse().first();\n\n        if (!codeLeaf) return next();\n        if (startOffset !== textUntilCode.length) return next();\n\n        return editor.removeMarkByKey(textNode.key, startOffset - codeLeaf.text.length, startOffset, \"code\");\n      }\n    }\n    return next();\n  }\n\n  return { onKeyDown: onKeyDown };\n}"]},"metadata":{},"sourceType":"script"}