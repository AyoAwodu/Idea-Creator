{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = encode;\nexports.decode = decode; // to ensure markdown compatability we need to specifically encode some characters\n\nfunction encode(href) {\n  return decodeSafe(href).trim().replace(/ /g, \"%20\").replace(/'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\");\n}\n\nfunction decode(href) {\n  try {\n    return decodeURI(href);\n  } catch (e) {\n    return decodeSafe(href);\n  }\n} // convert hanging % characters into percentage encoded %25 as decodeURI cannot\n// handle this scenario but users may input 'invalid' urls.\n\n\nfunction decodeSafe(uri) {\n  var components = uri.split(/(%(?:d0|d1)%.{2})/);\n  return components.map(function (component) {\n    try {\n      return decodeURIComponent(component);\n    } catch (e) {\n      return component.replace(/%(?!\\d+)/g, \"%25\");\n    }\n  }).join(\"\");\n}","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/slate-md-serializer/lib/urls.js"],"names":["Object","defineProperty","exports","value","encode","decode","href","decodeSafe","trim","replace","decodeURI","e","uri","components","split","map","component","decodeURIComponent","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAACG,MAAR,GAAiBA,MAAjB,C,CACA;;AACA,SAASD,MAAT,CAAgBE,IAAhB,EAAsB;AACpB,SAAOC,UAAU,CAACD,IAAD,CAAV,CAAiBE,IAAjB,GAAwBC,OAAxB,CAAgC,IAAhC,EAAsC,KAAtC,EAA6CA,OAA7C,CAAqD,IAArD,EAA2D,KAA3D,EAAkEA,OAAlE,CAA0E,KAA1E,EAAiF,KAAjF,EAAwFA,OAAxF,CAAgG,KAAhG,EAAuG,KAAvG,CAAP;AACD;;AAED,SAASJ,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAI;AACF,WAAOI,SAAS,CAACJ,IAAD,CAAhB;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV,WAAOJ,UAAU,CAACD,IAAD,CAAjB;AACD;AACF,C,CAED;AACA;;;AACA,SAASC,UAAT,CAAoBK,GAApB,EAAyB;AACvB,MAAIC,UAAU,GAAGD,GAAG,CAACE,KAAJ,CAAU,mBAAV,CAAjB;AACA,SAAOD,UAAU,CAACE,GAAX,CAAe,UAAUC,SAAV,EAAqB;AACzC,QAAI;AACF,aAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACD,KAFD,CAEE,OAAOL,CAAP,EAAU;AACV,aAAOK,SAAS,CAACP,OAAV,CAAkB,WAAlB,EAA+B,KAA/B,CAAP;AACD;AACF,GANM,EAMJS,IANI,CAMC,EAND,CAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = encode;\nexports.decode = decode;\n// to ensure markdown compatability we need to specifically encode some characters\nfunction encode(href) {\n  return decodeSafe(href).trim().replace(/ /g, \"%20\").replace(/'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\");\n}\n\nfunction decode(href) {\n  try {\n    return decodeURI(href);\n  } catch (e) {\n    return decodeSafe(href);\n  }\n}\n\n// convert hanging % characters into percentage encoded %25 as decodeURI cannot\n// handle this scenario but users may input 'invalid' urls.\nfunction decodeSafe(uri) {\n  var components = uri.split(/(%(?:d0|d1)%.{2})/);\n  return components.map(function (component) {\n    try {\n      return decodeURIComponent(component);\n    } catch (e) {\n      return component.replace(/%(?!\\d+)/g, \"%25\");\n    }\n  }).join(\"\");\n}"]},"metadata":{},"sourceType":"script"}