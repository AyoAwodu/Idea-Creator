{"ast":null,"code":"import _slicedToArray from \"/Users/evan/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/evan/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/src/components/main/components/admin/AdminPanel.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Button, Form, FormGroup, FormText, Label, Input } from 'reactstrap';\nimport axios from 'axios';\nimport noProjectImage from \"../../../../static/NoProjectsFound.png\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport userImage from \"../../../../static/usericon.png\";\nimport './AdminPanel.css';\nimport { textAlign } from '@material-ui/system';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nexport default class AdminPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCloseErrorModal = () => {\n      this.setState({\n        errorModal: false\n      });\n    };\n\n    this.openErrorModal = uid => {\n      this.setState({\n        errorModal: true,\n        currentProjectUid: uid\n      });\n    };\n\n    this.closeAdminsModal = () => {\n      this.setState({\n        editAdminsModal: false\n      });\n      this.resetAdminValues();\n    };\n\n    this.openAdminsModal = () => {\n      this.setState({\n        editAdminsModal: true\n      });\n    };\n\n    this.closeUserModal = () => {\n      this.setState({\n        editUsersModal: false\n      });\n      this.resetValue();\n    };\n\n    this.openUserModal = () => {\n      this.setState({\n        editUsersModal: true\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.pullProjectsForUser();\n    };\n\n    this.pullProjectsForUser = async () => {\n      const response = await axios.get('/api/project', {\n        headers: {\n          Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n\n        }\n      }).then(response => response.data);\n      this.setState({\n        projectList: response\n      });\n    };\n\n    this.pullProjectPermissions = async projectUID => {\n      const response = await axios.get('/api/project/' + projectUID + '/permissions', {\n        headers: {\n          Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n\n        }\n      }).then(response => response.data);\n      this.setState({\n        projectPermissions: response\n      });\n    };\n\n    this.editAdminsClick = async () => {\n      await this.pullAdminPermissions();\n      let guidList = this.addUsersToAdminCheckedList();\n      this.openAdminsModal();\n      this.setState({\n        activeAdminCheckboxes: guidList\n      });\n    };\n\n    this.pullAdminPermissions = async () => {\n      const response = await axios.get('/api/auth/get-users', {\n        headers: {\n          Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n\n        }\n      }).then(response => response.data);\n      this.setState({\n        adminPermissions: response\n      });\n    };\n\n    this.addUsersToCheckedList = () => {\n      let guidList = [];\n\n      if (this.state.projectPermissions) {\n        this.state.projectPermissions.map(user => {\n          if (user.hasPermission) {\n            guidList.push(user.uid);\n          }\n        });\n      }\n\n      return guidList;\n    };\n\n    this.addUsersToAdminCheckedList = () => {\n      let guidList = [];\n\n      if (this.state.adminPermissions) {\n        this.state.adminPermissions.map(user => {\n          if (user.type === 'admin') {\n            guidList.push(user.uid);\n          }\n        });\n      }\n\n      return guidList;\n    };\n\n    this.editUsersClick = async project => {\n      await this.pullProjectPermissions(project.uid);\n      let guidList = this.addUsersToCheckedList();\n      this.openUserModal();\n      this.setState({\n        project: project,\n        activeCheckboxes: guidList\n      });\n    };\n\n    this.submitUserChange = async () => {\n      let add = [];\n      let remove = [];\n      await this.state.permissionsChanged.map(userId => {\n        if (this.state.activeCheckboxes.includes(userId) && !this.state.projectPermissions.filter(x => x.uid === userId)[0].hasPermission) {\n          add.push(userId);\n        } else if (!this.state.activeCheckboxes.includes(userId) && this.state.projectPermissions.filter(x => x.uid === userId)[0].hasPermission) {\n          remove.push(userId);\n        }\n      });\n      this.setState({\n        permissionsToRemove: remove,\n        permissionsToAdd: add\n      });\n      await this.removePermissions();\n      await this.addPermissions();\n      this.closeUserModal();\n    };\n\n    this.addPermissions = async () => {\n      if (this.state.permissionsToAdd.length > 0) {\n        console.log(\"enter\");\n        const response = await axios.post('/api/project/' + this.state.project.uid + '/permissions', {\n          userUids: this.state.permissionsToAdd\n        }, {\n          headers: {\n            Authorization: 'Bearer ' + this.state.userData.token\n          }\n        }).then(response => response.data);\n      }\n    };\n\n    this.removePermissions = async () => {\n      let projectUID = this.state.project.uid;\n\n      if (this.state.permissionsToRemove.length > 0) {\n        const response = await axios.delete(\"/api/project/\".concat(projectUID, \"/permissions\"), {\n          data: {\n            userUids: this.state.permissionsToRemove\n          },\n          headers: {\n            Authorization: 'Bearer ' + this.state.userData.token\n          }\n        }).then(response => response.data);\n      }\n    };\n\n    this.submitAdminChange = async () => {\n      let add = [];\n      let remove = [];\n      await this.state.permissionsAdminChanged.map(userId => {\n        if (this.state.activeAdminCheckboxes.includes(userId) && this.state.adminPermissions.filter(x => x.uid === userId)[0].type !== 'admin') {\n          add.push(userId);\n        } else if (!this.state.activeAdminCheckboxes.includes(userId) && this.state.adminPermissions.filter(x => x.uid === userId)[0].type === 'admin') {\n          remove.push(userId);\n        }\n      });\n      this.setState({\n        permissionsAdminToAdd: add,\n        permissionsAdminToRemove: remove\n      });\n      await this.editAdminPermissions();\n      this.closeAdminsModal();\n    };\n\n    this.editAdminPermissions = async () => {\n      let i = 0;\n\n      if (this.state.permissionsAdminToAdd.length > 0) {\n        for (i = 0; this.state.permissionsAdminToAdd.length > i; i++) {\n          const response = await axios.post('/api/auth/user', {\n            uid: this.state.permissionsAdminToAdd[i],\n            type: 'admin'\n          }, {\n            headers: {\n              Authorization: 'Bearer ' + this.state.userData.token\n            }\n          }).then(response => response.data);\n        }\n      }\n\n      i = 0;\n\n      if (this.state.permissionsAdminToRemove.length > 0) {\n        for (i = 0; this.state.permissionsAdminToRemove.length > i; i++) {\n          const response = await axios.post('/api/auth/user', {\n            uid: this.state.permissionsAdminToRemove[i],\n            type: 'regular'\n          }, {\n            headers: {\n              Authorization: 'Bearer ' + this.state.userData.token\n            }\n          }).then(response => response.data);\n        }\n      }\n    };\n\n    this.handleDeleteProject = async () => {\n      let projectUID = this.state.currentProjectUid;\n\n      if (projectUID !== '') {\n        const response = await axios.delete(\"/api/project/\".concat(projectUID), {\n          headers: {\n            Authorization: 'Bearer ' + this.state.userData.token\n          }\n        }).then(response => response.data);\n        console.log(projectUID);\n        console.log(this.state.userData.token);\n        console.log(response);\n      }\n\n      this.pullProjectsForUser();\n      this.handleCloseErrorModal();\n    };\n\n    this.resetValue = () => {\n      this.setState({\n        permissionsChanged: [],\n        permissionsToAdd: [],\n        permissionsToRemove: []\n      });\n    };\n\n    this.resetAdminValues = () => {\n      this.setState({\n        adminPermissions: [],\n        activeAdminCheckboxes: [],\n        permissionsAdminToAdd: [],\n        permissionsAdminToRemove: [],\n        permissionsAdminChanged: []\n      });\n    };\n\n    this.CheckboxListSecondary = () => {\n      const _React$useState = React.useState([1]),\n            _React$useState2 = _slicedToArray(_React$useState, 2),\n            checked = _React$useState2[0],\n            setChecked = _React$useState2[1];\n\n      const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n      };\n    };\n\n    this.handleToggle = toggle => {\n      alert(toggle);\n    };\n\n    this.state = {\n      userData: this.props.location.state.userData || this.props.userData,\n      projectList: [],\n      projectPermissions: [],\n      adminPermissions: [],\n      editUsersModal: false,\n      editAdminsModal: false,\n      activeCheckboxes: [],\n      permissionsToAdd: [],\n      permissionsToRemove: [],\n      permissionsChanged: [],\n      activeAdminCheckboxes: [],\n      permissionsAdminToAdd: [],\n      permissionsAdminToRemove: [],\n      permissionsAdminChanged: [],\n      project: [],\n      errorModal: false,\n      errorMessage: '',\n      currentProjectUid: ''\n    };\n  }\n\n  handleCheck(id) {\n    let temp = this.state.permissionsChanged;\n\n    if (!this.state.permissionsChanged.includes(id)) {\n      temp = [...temp, id];\n    }\n\n    let found = this.state.activeCheckboxes.includes(id);\n\n    if (found) {\n      this.setState({\n        activeCheckboxes: this.state.activeCheckboxes.filter(x => x !== id),\n        permissionsChanged: temp\n      });\n    } else {\n      this.setState({\n        activeCheckboxes: [...this.state.activeCheckboxes, id],\n        permissionsChanged: temp\n      });\n    }\n  }\n\n  handleAdminCheck(id) {\n    let temp = this.state.permissionsAdminChanged;\n\n    if (!this.state.permissionsAdminChanged.includes(id)) {\n      temp = [...temp, id];\n    }\n\n    let found = this.state.activeAdminCheckboxes.includes(id);\n\n    if (found) {\n      this.setState({\n        activeAdminCheckboxes: this.state.activeAdminCheckboxes.filter(x => x !== id),\n        permissionsAdminChanged: temp\n      });\n    } else {\n      this.setState({\n        activeAdminCheckboxes: [...this.state.activeAdminCheckboxes, id],\n        permissionsAdminChanged: temp\n      });\n    }\n  }\n\n  renderSwitch(param) {\n    switch (param % 6) {\n      case 1:\n        return require(\"../../../../static/City.jpg\");\n\n      case 2:\n        return require(\"../../../../static/Beach.jpg\");\n\n      case 3:\n        return require(\"../../../../static/Coast.jpg\");\n\n      case 4:\n        return require(\"../../../../static/Field.jpg\");\n\n      case 5:\n        return require(\"../../../../static/Mountain.jpg\");\n\n      default:\n        return require(\"../../../../static/Underwater.jpg\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dashboard-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, this.state.projectList.length === 0 ? React.createElement(\"img\", {\n      src: noProjectImage,\n      id: \"no-projects-image\",\n      alt: \"No Projects Found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), this.state.projectList.map((project, index) => {\n      return React.createElement(\"div\", {\n        className: \"project-paper-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          height: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"project-paper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        style: {\n          height: 0,\n          paddingTop: '10em'\n        },\n        image: this.renderSwitch(index),\n        title: \"Idea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, project.title), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        id: \"font-awesome-space-right\",\n        icon: \"stream\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }), project.description.slice(0, 75)), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        id: \"font-awesome-space-right\",\n        icon: \"project-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), \"Project ID: #\", project.uid), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        id: \"font-awesome-space-right\",\n        icon: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), \"Date Created: \", project.dateCreated.slice(0, 10)))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"share-learn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        onClick: () => {\n          this.editUsersClick(project);\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Edit Users\", React.createElement(FontAwesomeIcon, {\n        id: \"font-awesome-space\",\n        icon: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      })), React.createElement(Tooltip, {\n        title: \"Delete Project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"learn-button\",\n        onClick: () => {\n          this.openErrorModal(project.uid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Delete Project\", React.createElement(\"div\", {\n        id: \"trash-icon-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        id: \"admin-delete\",\n        icon: \"trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      })))))))));\n    }), this.state.userData.type === 'admin' ? React.createElement(\"div\", {\n      className: \"project-paper-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"project-paper\",\n      onClick: this.editAdminsClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      style: {\n        height: 0,\n        paddingTop: '56.25%'\n      },\n      image: require(\"../../../../static/addProject.jpg\"),\n      title: \"Add Administrator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Add Administrator +\"))))))) : null), React.createElement(Dialog, {\n      open: this.state.editUsersModal,\n      TransitionComponent: Transition,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"Edit Users\"), React.createElement(DialogContent, {\n      dividers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      id: \"userList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, this.state.projectPermissions.map(user => {\n      return React.createElement(ListItem, {\n        key: user.uid,\n        button: true,\n        disabled: user.type === 'admin',\n        onClick: () => this.handleCheck(user.uid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: \"Avatar\",\n        src: userImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: user.firstName + \" \" + user.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        edge: \"end\",\n        onChange: () => this.handleCheck(user.uid),\n        checked: this.state.activeCheckboxes.includes(user.uid),\n        disabled: user.type === 'admin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      })));\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.closeUserModal,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.submitUserChange,\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(Dialog, {\n      open: this.state.editAdminsModal,\n      TransitionComponent: Transition,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"Edit Admins\"), React.createElement(DialogContent, {\n      dividers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      id: \"userList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, this.state.adminPermissions.map(user => {\n      return React.createElement(ListItem, {\n        key: user.uid,\n        button: true,\n        disabled: user.uid === this.state.userData.uid,\n        onClick: () => this.handleAdminCheck(user.uid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: \"Avatar\",\n        src: userImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: user.firstName + \" \" + user.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        edge: \"end\",\n        onChange: () => this.handleAdminCheck(user.uid),\n        checked: this.state.activeAdminCheckboxes.includes(user.uid),\n        disabled: user.uid === this.state.userData.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      })));\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.closeAdminsModal,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.submitAdminChange,\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(Dialog, {\n      open: this.state.errorModal,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsibe-alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, \"Delete This Project?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseErrorModal,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, \"No\"), React.createElement(Button, {\n      onClick: this.handleDeleteProject,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, \"Yes\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/evan/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/src/components/main/components/admin/AdminPanel.js"],"names":["React","Component","makeStyles","Paper","Typography","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Form","FormGroup","FormText","Label","Input","axios","noProjectImage","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","Slide","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","userImage","textAlign","FontAwesomeIcon","Tooltip","Transition","props","AdminPanel","constructor","handleCloseErrorModal","setState","errorModal","openErrorModal","uid","currentProjectUid","closeAdminsModal","editAdminsModal","resetAdminValues","openAdminsModal","closeUserModal","editUsersModal","resetValue","openUserModal","componentDidMount","pullProjectsForUser","response","get","headers","Authorization","state","userData","token","then","data","projectList","pullProjectPermissions","projectUID","projectPermissions","editAdminsClick","pullAdminPermissions","guidList","addUsersToAdminCheckedList","activeAdminCheckboxes","adminPermissions","addUsersToCheckedList","map","user","hasPermission","push","type","editUsersClick","project","activeCheckboxes","submitUserChange","add","remove","permissionsChanged","userId","includes","filter","x","permissionsToRemove","permissionsToAdd","removePermissions","addPermissions","length","console","log","post","userUids","delete","submitAdminChange","permissionsAdminChanged","permissionsAdminToAdd","permissionsAdminToRemove","editAdminPermissions","i","handleDeleteProject","CheckboxListSecondary","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","splice","toggle","alert","location","errorMessage","handleCheck","id","temp","found","handleAdminCheck","renderSwitch","param","require","render","index","height","paddingTop","title","description","slice","dateCreated","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Button, Form, FormGroup, FormText, Label, Input } from 'reactstrap';\nimport axios from 'axios';\nimport noProjectImage from \"../../../../static/NoProjectsFound.png\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport userImage from \"../../../../static/usericon.png\";\nimport './AdminPanel.css';\nimport { textAlign } from '@material-ui/system';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\nexport default class AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: this.props.location.state.userData || this.props.userData,\n            projectList: [],\n            projectPermissions: [],\n            adminPermissions: [],\n            editUsersModal: false,\n            editAdminsModal: false,\n            activeCheckboxes: [],\n            permissionsToAdd: [],\n            permissionsToRemove: [],\n            permissionsChanged: [],\n            activeAdminCheckboxes: [],\n            permissionsAdminToAdd: [],\n            permissionsAdminToRemove: [],\n            permissionsAdminChanged: [],\n            project: [],\n            errorModal: false,\n            errorMessage: '',\n            currentProjectUid: ''\n        }\n    }\n\n\n    handleCloseErrorModal = () => {\n        this.setState({\n            errorModal: false\n        });\n      }\n      \n      openErrorModal = (uid) => {\n        this.setState({\n            errorModal: true,\n            currentProjectUid: uid\n        });\n      }\n\n    closeAdminsModal = () => {\n        this.setState({\n            editAdminsModal: false\n        });\n        this.resetAdminValues()\n    }\n\n    openAdminsModal = () => {\n        this.setState({\n            editAdminsModal: true\n        });\n    }\n\n    closeUserModal = () => {\n        this.setState({\n            editUsersModal: false\n        });\n        this.resetValue()\n    }\n\n    openUserModal = () => {\n        this.setState({\n            editUsersModal: true\n        });\n    }\n\n    componentDidMount = () => {\n        this.pullProjectsForUser();\n    }\n\n    pullProjectsForUser = async () => {\n        const response = await axios.get('/api/project', {\n            headers: {\n                Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n            }\n        }).then(response => response.data);\n        this.setState({\n            projectList: response\n        });\n    }\n\n    pullProjectPermissions = async (projectUID) => {\n        const response = await axios.get('/api/project/' + projectUID + '/permissions', {\n            headers: {\n                Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n            }\n        }).then(response => response.data);\n        this.setState({\n            projectPermissions: response\n        });\n    }\n\n    editAdminsClick = async () => {\n\n        await this.pullAdminPermissions()\n        let guidList = this.addUsersToAdminCheckedList()\n        this.openAdminsModal()\n        this.setState({\n            activeAdminCheckboxes: guidList\n        })\n    }\n\n    pullAdminPermissions = async () => {\n        const response = await axios.get('/api/auth/get-users', {\n            headers: {\n                Authorization: 'Bearer ' + this.state.userData.token //the token is a variable which holds the token\n            }\n        }).then(response => response.data);\n        this.setState({\n            adminPermissions: response\n        });\n    }\n\n    addUsersToCheckedList = () => {\n        let guidList = []\n\n        if (this.state.projectPermissions) {\n            this.state.projectPermissions.map((user) => {\n                if (user.hasPermission) {\n                    guidList.push(user.uid);\n                }\n\n            })\n        }\n\n        return guidList;\n\n\n    }\n\n    addUsersToAdminCheckedList = () => {\n        let guidList = []\n\n        if (this.state.adminPermissions) {\n            this.state.adminPermissions.map((user) => {\n                if (user.type === 'admin') {\n                    guidList.push(user.uid);\n                }\n\n            })\n        }\n\n        return guidList;\n\n\n    }\n\n    editUsersClick = async (project) => {\n        await this.pullProjectPermissions(project.uid)\n        let guidList = this.addUsersToCheckedList()\n        this.openUserModal()\n        this.setState({\n            project: project,\n            activeCheckboxes: guidList\n        })\n\n    }\n\n    submitUserChange = async () => {\n        let add = []\n        let remove = []\n        await this.state.permissionsChanged.map((userId) => {\n            if (this.state.activeCheckboxes.includes(userId) && !this.state.projectPermissions.filter(x => x.uid === userId)[0].hasPermission) {\n                add.push(userId)\n            }\n            else if (!this.state.activeCheckboxes.includes(userId) && this.state.projectPermissions.filter(x => x.uid === userId)[0].hasPermission) {\n                remove.push(userId)\n            }\n        })\n\n        this.setState({\n            permissionsToRemove: remove,\n            permissionsToAdd: add\n        })\n        await this.removePermissions()\n        await this.addPermissions()\n        this.closeUserModal()\n    }\n\n    addPermissions = async () => {\n        if (this.state.permissionsToAdd.length > 0) {\n            console.log(\"enter\")\n            const response = await axios.post('/api/project/' + this.state.project.uid + '/permissions', {\n\n                userUids: this.state.permissionsToAdd\n            },\n                {\n                    headers: {\n                        Authorization: 'Bearer ' + this.state.userData.token\n                    }\n                }).then(response => response.data);\n        }\n    }\n\n    removePermissions = async () => {\n        let projectUID = this.state.project.uid\n\n        if (this.state.permissionsToRemove.length > 0) {\n            const response = await axios.delete(`/api/project/${projectUID}/permissions`, {\n                data: {\n                    userUids: this.state.permissionsToRemove\n                },\n                headers: {\n                    Authorization: 'Bearer ' + this.state.userData.token\n                }\n            }\n            ).then(response => response.data);\n        }\n    }\n\n    submitAdminChange = async () => {\n        let add = []\n        let remove = []\n        await this.state.permissionsAdminChanged.map((userId) => {\n            if (this.state.activeAdminCheckboxes.includes(userId) && this.state.adminPermissions.filter(x => x.uid === userId)[0].type !== 'admin') {\n                add.push(userId)\n            }\n            else if (!this.state.activeAdminCheckboxes.includes(userId) && this.state.adminPermissions.filter(x => x.uid === userId)[0].type === 'admin') {\n                remove.push(userId)\n            }\n        })\n\n\n        this.setState({\n            permissionsAdminToAdd: add,\n            permissionsAdminToRemove: remove\n        })\n        await this.editAdminPermissions()\n        this.closeAdminsModal()\n    }\n\n    editAdminPermissions = async () => {\n\n        let i = 0;\n\n        if (this.state.permissionsAdminToAdd.length > 0) {\n            for (i = 0; this.state.permissionsAdminToAdd.length > i; i++) {\n                const response = await axios.post('/api/auth/user', {\n\n                    uid: this.state.permissionsAdminToAdd[i],\n                    type: 'admin'\n                },\n                    {\n                        headers: {\n                            Authorization: 'Bearer ' + this.state.userData.token\n                        }\n                    }).then(response => response.data);\n            }\n        }\n\n        i = 0\n\n        if (this.state.permissionsAdminToRemove.length > 0) {\n            for (i = 0; this.state.permissionsAdminToRemove.length > i; i++) {\n\n                const response = await axios.post('/api/auth/user', {\n\n                    uid: this.state.permissionsAdminToRemove[i],\n                    type: 'regular'\n                },\n                    {\n                        headers: {\n                            Authorization: 'Bearer ' + this.state.userData.token\n                        }\n                    }).then(response => response.data);\n            }\n        }\n    }\n\n    handleDeleteProject = async () =>{\n        \n        let projectUID = this.state.currentProjectUid\n\n        if (projectUID !== '') {\n            const response = await axios.delete(`/api/project/${projectUID}`, {\n                headers: {\n                    Authorization: 'Bearer ' + this.state.userData.token\n                }\n            }\n            ).then(response => response.data);\n            console.log(projectUID)\n            console.log(this.state.userData.token)\n            console.log(response);\n        }\n        this.pullProjectsForUser();\n        this.handleCloseErrorModal();\n    }\n\n\n\n    resetValue = () => {\n        this.setState({\n            permissionsChanged: [],\n            permissionsToAdd: [],\n            permissionsToRemove: [],\n        })\n    }\n\n    resetAdminValues = () => {\n        this.setState({\n            adminPermissions: [],\n            activeAdminCheckboxes: [],\n            permissionsAdminToAdd: [],\n            permissionsAdminToRemove: [],\n            permissionsAdminChanged: [],\n        })\n    }\n\n\n    CheckboxListSecondary = () => {\n        const [checked, setChecked] = React.useState([1]);\n\n        const handleToggle = value => () => {\n            const currentIndex = checked.indexOf(value);\n            const newChecked = [...checked];\n\n            if (currentIndex === -1) {\n                newChecked.push(value);\n            } else {\n                newChecked.splice(currentIndex, 1);\n            }\n\n            setChecked(newChecked);\n        }\n    }\n\n    handleToggle = (toggle) => {\n        alert(toggle);\n    }\n\n    handleCheck(id) {\n        let temp = this.state.permissionsChanged\n        if (!this.state.permissionsChanged.includes(id)) {\n            temp = [...temp, id]\n        }\n        let found = this.state.activeCheckboxes.includes(id)\n        if (found) {\n            this.setState({\n                activeCheckboxes: this.state.activeCheckboxes.filter(x => x !== id),\n                permissionsChanged: temp\n            })\n        } else {\n            this.setState({\n                activeCheckboxes: [...this.state.activeCheckboxes, id],\n                permissionsChanged: temp\n            })\n        }\n\n    }\n\n    handleAdminCheck(id) {\n        let temp = this.state.permissionsAdminChanged\n        if (!this.state.permissionsAdminChanged.includes(id)) {\n            temp = [...temp, id]\n        }\n        let found = this.state.activeAdminCheckboxes.includes(id)\n        if (found) {\n            this.setState({\n                activeAdminCheckboxes: this.state.activeAdminCheckboxes.filter(x => x !== id),\n                permissionsAdminChanged: temp\n            })\n        } else {\n            this.setState({\n                activeAdminCheckboxes: [...this.state.activeAdminCheckboxes, id],\n                permissionsAdminChanged: temp\n            })\n        }\n\n    }\n\n\n    renderSwitch(param) {\n        switch(param % 6) {\n          case 1:\n            return require(\"../../../../static/City.jpg\");\n          case 2:\n            return require(\"../../../../static/Beach.jpg\");\n          case 3:\n            return require(\"../../../../static/Coast.jpg\");\n          case 4:\n            return require(\"../../../../static/Field.jpg\");\n            case 5:\n            return require(\"../../../../static/Mountain.jpg\");\n          default:\n            return require(\"../../../../static/Underwater.jpg\");\n        }\n      }\n\n\n    render() {\n\n        return (\n            <div className='dashboard-container'>\n                <div className='dashboard-header'>\n                </div>\n                <div className='dashboard-body'>\n                    {this.state.projectList.length === 0 ? (\n                        <img src={noProjectImage} id='no-projects-image' alt=\"No Projects Found\" />\n\n                    ) : (<div></div>)}\n                    {/* TODO: Have to make this conditional render, render the project tiles */}\n                    {this.state.projectList.map((project, index) => {\n                        return (\n                            <div className='project-paper-holder'>\n                                <Card style={{ height: 400 }}>\n                                    <Paper className='project-paper'>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                style={{ height: 0, paddingTop: '10em' }}\n                                                image={this.renderSwitch(index)}\n                                                title=\"Idea\"\n                                            />\n                                            <CardContent>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                    {project.title}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    <FontAwesomeIcon id='font-awesome-space-right' icon=\"stream\" />\n                                                    {project.description.slice(0,75)}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    <FontAwesomeIcon id='font-awesome-space-right' icon=\"project-diagram\" />\n                                                    Project ID: #{project.uid}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    <FontAwesomeIcon id='font-awesome-space-right' icon=\"calendar\" />\n                                                    Date Created: {project.dateCreated.slice(0, 10)}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                        <CardActions>\n                                        <div id='share-learn-container'>\n                                            <Button size=\"small\" onClick={() => { this.editUsersClick(project) }} color=\"primary\">\n                                                Edit Users\n                                                <FontAwesomeIcon id='font-awesome-space' icon=\"edit\" />\n                                            </Button>\n                                            \n                                            \n                                                <Tooltip title=\"Delete Project\">\n                                                    <Button id='learn-button' onClick={()=> {this.openErrorModal(project.uid)}}>\n                                                        Delete Project \n                                                        <div id = 'trash-icon-button'><FontAwesomeIcon id='admin-delete' icon=\"trash-alt\" /></div>\n                                                        \n                                                    </Button>\n                                                </Tooltip>\n                                            </div>\n                                        </CardActions>\n                                    </Paper>\n                                </Card>\n                            </div>\n                        );\n                    })\n                    }\n                    {this.state.userData.type === 'admin' ? (\n                        <div className='project-paper-holder'>\n                            <Card>\n                                <Paper className='project-paper' onClick={this.editAdminsClick}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            style={{ height: 0, paddingTop: '56.25%' }}\n                                            image={require(\"../../../../static/addProject.jpg\")}\n                                            title=\"Add Administrator\"\n                                        />\n\n                                        <CardContent>\n\n                                            <Typography variant=\"h5\" component=\"h2\">\n                                                <center>\n                                                    Add Administrator +\n                                    </center>\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n\n                                </Paper>\n                            </Card>\n                        </div>\n                    ) : (null)}\n                </div>\n\n                <Dialog\n                    open={this.state.editUsersModal}\n                    TransitionComponent={Transition}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    maxWidth=\"md\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Edit Users</DialogTitle>\n                    <DialogContent dividers={true}>\n                        <DialogContentText>\n                            <List dense id='userList'>\n                                {this.state.projectPermissions.map((user) => {\n                                    return (\n                                        <ListItem key={user.uid} button disabled={user.type === 'admin'} onClick={() => this.handleCheck(user.uid)}>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={`Avatar`}\n                                                    src={userImage}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText primary={user.firstName + \" \" + user.lastName} />\n                                            <ListItemSecondaryAction>\n                                                <Checkbox\n                                                    edge=\"end\"\n                                                    onChange={() => this.handleCheck(user.uid)}\n                                                    checked={this.state.activeCheckboxes.includes(user.uid)}\n                                                    disabled={user.type === 'admin'}\n                                                />\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.closeUserModal} color=\"warning\">\n                            Cancel\n          </Button>\n                        <Button onClick={this.submitUserChange} color=\"success\">\n                            Apply\n          </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.editAdminsModal}\n                    TransitionComponent={Transition}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    maxWidth=\"md\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Edit Admins</DialogTitle>\n                    <DialogContent dividers={true}>\n                        <DialogContentText>\n                            <List dense id='userList'>\n                                {this.state.adminPermissions.map((user) => {\n                                    return (\n                                        <ListItem key={user.uid} button disabled={user.uid === this.state.userData.uid} onClick={() => this.handleAdminCheck(user.uid)}>\n                                            <ListItemAvatar>\n                                                <Avatar\n                                                    alt={`Avatar`}\n                                                    src={userImage}\n                                                />\n                                            </ListItemAvatar>\n                                            <ListItemText primary={user.firstName + \" \" + user.lastName} />\n                                            <ListItemSecondaryAction>\n                                                <Checkbox\n                                                    edge=\"end\"\n                                                    onChange={() => this.handleAdminCheck(user.uid)}\n                                                    checked={this.state.activeAdminCheckboxes.includes(user.uid)}\n                                                    disabled={user.uid === this.state.userData.uid}\n                                                />\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.closeAdminsModal} color=\"warning\">\n                            Cancel\n          </Button>\n                        <Button onClick={this.submitAdminChange} color=\"success\">\n                            Apply\n          </Button>\n                    </DialogActions>\n                </Dialog>\n                \n\n            \n            <Dialog\n              open={this.state.errorModal}\n              TransitionComponent={Transition}\n              keepMounted\n              maxWidth='lg'\n              aria-labelledby=\"alert-dialog-slide-title\"\n              aria-describedby=\"alert-dialog-slide-description\"\n            >\n              <DialogTitle id=\"responsibe-alert-dialog-slide-title\">\n                Delete This Project?\n              </DialogTitle>\n              <DialogActions>\n                <Button onClick={this.handleCloseErrorModal} color=\"primary\">\n                  No\n                </Button>\n                <Button onClick={this.handleDeleteProject} color=\"warning\">\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}