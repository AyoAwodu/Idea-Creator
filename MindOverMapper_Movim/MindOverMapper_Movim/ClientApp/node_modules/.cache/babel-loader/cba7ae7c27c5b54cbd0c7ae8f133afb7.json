{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayomi\\\\source\\\\repos\\\\Idea-Creator\\\\Idea-Creator\\\\MindOverMapper_Movim\\\\MindOverMapper_Movim\\\\ClientApp\\\\src\\\\components\\\\main\\\\components\\\\projectprototype\\\\ProjectPrototype.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { Label, Input } from 'reactstrap';\nimport Slide from '@material-ui/core/Slide';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Dropzone from 'react-dropzone';\nimport './ProjectPrototype.css';\nexport default class ProjectPrototype extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n    };\n\n    this.resetFields = () => {\n      this.setState({\n        prototypeName: '',\n        prototypeDescription: ''\n      });\n    };\n\n    this.handlePrototypeNameChange = event => {\n      this.setState({\n        prototypeName: event.target.value\n      });\n    };\n\n    this.handlePrototypeDescriptionChange = event => {\n      this.setState({\n        prototypeDescription: event.target.value\n      });\n    };\n\n    this.onDrop = files => {\n      console.log(files);\n    };\n\n    this.submitPrototype = () => {\n      axios.post('/api/project', {\n        headers: {\n          Authorization: 'Bearer ' + this.state.userData.token\n        },\n        data: {\n          'prototypeName': this.state.prototypeName,\n          'prototypeDescription': this.state.prototypeDescription\n        }\n      });\n    };\n\n    this.nextPage = () => {\n      this.props.history.push({\n        pathname: '/home',\n        state: this.state // need this for moving to different component\n\n      });\n    };\n\n    this.state = {\n      projectName: this.props.location.state.projectName,\n      userData: this.props.location.state.userData || this.props.userData,\n      prototypeName: '',\n      prototypeDescription: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"blue-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Prototypes\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prototype-description-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      value: this.state.prototypetName,\n      onChange: this.handlePrototypeNameChange,\n      label: \"Name\",\n      margin: \"normal\",\n      placeholder: \"Enter Name...\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prototype-description-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      value: this.state.prototypeDescription,\n      onChange: this.handlePrototypeDescriptionChange,\n      label: \"Description\",\n      margin: \"normal\",\n      rows: \"4\",\n      multiline: true,\n      placeholder: \"Enter Description...\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Upload your files\"), React.createElement(\"div\", {\n      className: \"zone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      acceptedFiles\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), isDragActive ? \"Drop your file here\" : 'Click or drag a file to upload', React.createElement(\"ul\", {\n      className: \"list-group mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, acceptedFiles.length > 0 && acceptedFiles.map(acceptedFile => React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, acceptedFile.name))))))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/src/components/main/components/projectprototype/ProjectPrototype.js"],"names":["React","Component","axios","TextField","Dialog","DialogTitle","DialogContent","DialogActions","Label","Input","Slide","Container","Form","Button","withRouter","FontAwesomeIcon","Dropzone","ProjectPrototype","constructor","props","componentDidMount","console","log","resetFields","setState","prototypeName","prototypeDescription","handlePrototypeNameChange","event","target","value","handlePrototypeDescriptionChange","onDrop","files","submitPrototype","post","headers","Authorization","state","userData","token","data","nextPage","history","push","pathname","projectName","location","render","prototypetName","getRootProps","getInputProps","isDragActive","acceptedFiles","length","map","acceptedFile","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAuC,iBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,wBAAP;AAGA,eAAe,MAAMC,gBAAN,SAA+BhB,SAA/B,CAAyC;AACpDiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,iBAVmB,GAUC,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH,KAZkB;;AAAA,SAcnBI,WAdmB,GAcL,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAE,EADL;AAEVC,QAAAA,oBAAoB,EAAE;AAFZ,OAAd;AAIH,KAnBkB;;AAAA,SAqBnBC,yBArBmB,GAqBUC,KAAD,IAAW;AACnC,WAAKJ,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAEG,KAAK,CAACC,MAAN,CAAaC;AADlB,OAAd;AAGH,KAzBkB;;AAAA,SA2BnBC,gCA3BmB,GA2BiBH,KAAD,IAAW;AAC1C,WAAKJ,QAAL,CAAc;AACVE,QAAAA,oBAAoB,EAAEE,KAAK,CAACC,MAAN,CAAaC;AADzB,OAAd;AAGH,KA/BkB;;AAAA,SAkCnBE,MAlCmB,GAkCTC,KAAD,IAAW;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACH,KApCkB;;AAAA,SAuCnBC,eAvCmB,GAuCD,MAAM;AACpBhC,MAAAA,KAAK,CAACiC,IAAN,CAAW,cAAX,EAA2B;AACvBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC;AAD1C,SADc;AAIvBC,QAAAA,IAAI,EAAE;AACF,2BAAiB,KAAKH,KAAL,CAAWb,aAD1B;AAEF,kCAAwB,KAAKa,KAAL,CAAWZ;AAFjC;AAJiB,OAA3B;AASH,KAjDkB;;AAAA,SAoDnBgB,QApDmB,GAoDR,MAAM;AACb,WAAKvB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,OADU;AAEpBP,QAAAA,KAAK,EAAE,KAAKA,KAFQ,CAED;;AAFC,OAAxB;AAIH,KAzDkB;;AAEf,SAAKA,KAAL,GAAa;AACTQ,MAAAA,WAAW,EAAE,KAAK3B,KAAL,CAAW4B,QAAX,CAAoBT,KAApB,CAA0BQ,WAD9B;AAETP,MAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAW4B,QAAX,CAAoBT,KAApB,CAA0BC,QAA1B,IAAsC,KAAKpB,KAAL,CAAWoB,QAFlD;AAGTd,MAAAA,aAAa,EAAE,EAHN;AAITC,MAAAA,oBAAoB,EAAE;AAJb,KAAb;AAMH;;AAmDDsB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWW,cADtB;AAEI,MAAA,QAAQ,EAAE,KAAKtB,yBAFnB;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,WAAW,EAAC,eALhB;AAMI,MAAA,OAAO,EAAC,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,CADJ,EAaI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWZ,oBADtB;AAEI,MAAA,QAAQ,EAAE,KAAKK,gCAFnB;AAGI,MAAA,KAAK,EAAC,aAHV;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,IAAI,EAAC,GALT;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,WAAW,EAAC,sBAPhB;AAQK,MAAA,OAAO,EAAC,UARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADI,CAbJ,EA2BA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEA;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKC,MAAvB;AAA+B,MAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEkB,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BC,MAAAA,YAA/B;AAA6CC,MAAAA;AAA7C,KAAD,KACG,6CAASH,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAESC,YAAY,GAAG,qBAAH,GAA2B,gCAFhD,EAGQ;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,aAAa,CAACC,MAAd,GAAuB,CAAvB,IAA4BD,aAAa,CAACE,GAAd,CAAkBC,YAAY,IACvD;AAAI,MAAA,SAAS,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,YAAY,CAACC,IADlB,CADyB,CADjC,CAHR,CAFR,CADA,CAFA,CA3BA,EA+CI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ,CADJ,CAFJ,CADJ;AA0DH;;AAvHmD","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { Label, Input } from 'reactstrap';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Container, Form, Button} from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Dropzone from 'react-dropzone'\r\nimport './ProjectPrototype.css';\r\n\r\n\r\nexport default class ProjectPrototype extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectName: this.props.location.state.projectName,\r\n            userData: this.props.location.state.userData || this.props.userData,\r\n            prototypeName: '',\r\n            prototypeDescription: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(this.props)\r\n    }\r\n\r\n    resetFields = () => {\r\n        this.setState({\r\n            prototypeName: '',\r\n            prototypeDescription: '',\r\n        })\r\n    }\r\n\r\n    handlePrototypeNameChange = (event) => {\r\n        this.setState({\r\n            prototypeName: event.target.value\r\n        });\r\n    }\r\n   \r\n    handlePrototypeDescriptionChange = (event) => {\r\n        this.setState({\r\n            prototypeDescription: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    onDrop = (files) => {\r\n        console.log(files);\r\n    }\r\n\r\n\r\n    submitPrototype = () => {\r\n        axios.post('/api/project', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.state.userData.token \r\n            },\r\n            data: {\r\n                'prototypeName': this.state.prototypeName,\r\n                'prototypeDescription': this.state.prototypeDescription\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    nextPage = () => {\r\n        this.props.history.push({\r\n            pathname: '/home',\r\n            state: this.state  // need this for moving to different component\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='blue-card-container'>\r\n                <h3 className=\"page-title\">Prototypes</h3>\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group>\r\n                        <div className='prototype-description-holder'>\r\n                        <TextField\r\n                            value={this.state.prototypetName}\r\n                            onChange={this.handlePrototypeNameChange}\r\n                            label=\"Name\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"Enter Name...\"\r\n                            variant=\"outlined\">\r\n                        </TextField>\r\n                        </div>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                    <div className='prototype-description-holder'>\r\n                        <TextField\r\n                            value={this.state.prototypeDescription}\r\n                            onChange={this.handlePrototypeDescriptionChange}\r\n                            label=\"Description\"\r\n                            margin=\"normal\"\r\n                            rows=\"4\"\r\n                            multiline\r\n                            placeholder=\"Enter Description...\"\r\n                             variant=\"outlined\">\r\n                                </TextField>\r\n                            </div>\r\n                            </Form.Group>\r\n                    <Form.Group>\r\n                    <h4>Upload your files</h4>\r\n                    <div className = \"zone\">\r\n                    <Dropzone onDrop={this.onDrop} multiple>\r\n                        {({ getRootProps, getInputProps, isDragActive, acceptedFiles}) => (\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                    {isDragActive ? \"Drop your file here\" : 'Click or drag a file to upload'}\r\n                                    <ul className=\"list-group mt-2\">\r\n                                        {acceptedFiles.length > 0 && acceptedFiles.map(acceptedFile => (\r\n                                            <li className=\"list-group-item list-group-item-success\">\r\n                                                {acceptedFile.name}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>  \r\n                            )}\r\n                        </Dropzone>\r\n                            </div> \r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Upload\r\n                             </Button>\r\n                         </Form>      \r\n                </Container>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}