{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate');\n\nvar _utils = require('../utils');\n/**\n * Unwrap items at range from their list.\n */\n\n\nfunction unwrapList(opts, change) {\n  var items = (0, _utils.getItemsAtRange)(opts, change.value);\n\n  if (items.isEmpty()) {\n    return change;\n  } // Unwrap the items from their list\n\n\n  change.withoutNormalizing(function () {\n    items.forEach(function (item) {\n      return change.unwrapNodeByKey(item.key);\n    }); // Parent of the list of the items\n\n    var firstItem = items.first();\n    var parent = change.value.document.getParent(firstItem.key);\n    var index = parent.nodes.findIndex(function (node) {\n      return node.key === firstItem.key;\n    }); // Unwrap the items' children\n\n    items.forEach(function (item) {\n      item.nodes.forEach(function (node) {\n        change.moveNodeByKey(node.key, parent.key, index);\n        index += 1;\n      });\n    }); // Finally, remove the now empty items\n\n    items.forEach(function (item) {\n      return change.removeNodeByKey(item.key);\n    });\n  });\n  return change;\n}\n\nexports.default = unwrapList;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@tommoor/slate-edit-list/dist/changes/unwrapList.js"],"names":["Object","defineProperty","exports","value","require","_utils","unwrapList","opts","change","items","getItemsAtRange","isEmpty","withoutNormalizing","forEach","item","unwrapNodeByKey","key","firstItem","first","parent","document","getParent","index","nodes","findIndex","node","moveNodeByKey","removeNodeByKey","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIAC,OAAO,CAAC,OAAD,CAAP;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;AAEA;;;;;AAGA,SAASE,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAC9B,MAAIC,KAAK,GAAG,CAAC,GAAGJ,MAAM,CAACK,eAAX,EAA4BH,IAA5B,EAAkCC,MAAM,CAACL,KAAzC,CAAZ;;AAEA,MAAIM,KAAK,CAACE,OAAN,EAAJ,EAAqB;AACjB,WAAOH,MAAP;AACH,GAL6B,CAO9B;;;AACAA,EAAAA,MAAM,CAACI,kBAAP,CAA0B,YAAY;AAClCH,IAAAA,KAAK,CAACI,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B,aAAON,MAAM,CAACO,eAAP,CAAuBD,IAAI,CAACE,GAA5B,CAAP;AACH,KAFD,EADkC,CAKlC;;AACA,QAAIC,SAAS,GAAGR,KAAK,CAACS,KAAN,EAAhB;AACA,QAAIC,MAAM,GAAGX,MAAM,CAACL,KAAP,CAAaiB,QAAb,CAAsBC,SAAtB,CAAgCJ,SAAS,CAACD,GAA1C,CAAb;AAEA,QAAIM,KAAK,GAAGH,MAAM,CAACI,KAAP,CAAaC,SAAb,CAAuB,UAAUC,IAAV,EAAgB;AAC/C,aAAOA,IAAI,CAACT,GAAL,KAAaC,SAAS,CAACD,GAA9B;AACH,KAFW,CAAZ,CATkC,CAalC;;AACAP,IAAAA,KAAK,CAACI,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1BA,MAAAA,IAAI,CAACS,KAAL,CAAWV,OAAX,CAAmB,UAAUY,IAAV,EAAgB;AAC/BjB,QAAAA,MAAM,CAACkB,aAAP,CAAqBD,IAAI,CAACT,GAA1B,EAA+BG,MAAM,CAACH,GAAtC,EAA2CM,KAA3C;AACAA,QAAAA,KAAK,IAAI,CAAT;AACH,OAHD;AAIH,KALD,EAdkC,CAqBlC;;AACAb,IAAAA,KAAK,CAACI,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B,aAAON,MAAM,CAACmB,eAAP,CAAuBb,IAAI,CAACE,GAA5B,CAAP;AACH,KAFD;AAGH,GAzBD;AA2BA,SAAOR,MAAP;AACH;;AAEDN,OAAO,CAAC0B,OAAR,GAAkBtB,UAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nrequire('slate');\n\nvar _utils = require('../utils');\n\n/**\n * Unwrap items at range from their list.\n */\nfunction unwrapList(opts, change) {\n    var items = (0, _utils.getItemsAtRange)(opts, change.value);\n\n    if (items.isEmpty()) {\n        return change;\n    }\n\n    // Unwrap the items from their list\n    change.withoutNormalizing(function () {\n        items.forEach(function (item) {\n            return change.unwrapNodeByKey(item.key);\n        });\n\n        // Parent of the list of the items\n        var firstItem = items.first();\n        var parent = change.value.document.getParent(firstItem.key);\n\n        var index = parent.nodes.findIndex(function (node) {\n            return node.key === firstItem.key;\n        });\n\n        // Unwrap the items' children\n        items.forEach(function (item) {\n            item.nodes.forEach(function (node) {\n                change.moveNodeByKey(node.key, parent.key, index);\n                index += 1;\n            });\n        });\n\n        // Finally, remove the now empty items\n        items.forEach(function (item) {\n            return change.removeNodeByKey(item.key);\n        });\n    });\n\n    return change;\n}\n\nexports.default = unwrapList;"]},"metadata":{},"sourceType":"script"}