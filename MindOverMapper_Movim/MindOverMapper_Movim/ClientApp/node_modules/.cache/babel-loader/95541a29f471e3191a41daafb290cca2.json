{"ast":null,"code":"/*\r\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { NavbarDivider } from \"./navbarDivider\";\nimport { NavbarGroup } from \"./navbarGroup\";\nimport { NavbarHeading } from \"./navbarHeading\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar Navbar =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Navbar, _super);\n\n  function Navbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Navbar.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        children = _b.children,\n        className = _b.className,\n        fixedToTop = _b.fixedToTop,\n        htmlProps = tslib_1.__rest(_b, [\"children\", \"className\", \"fixedToTop\"]);\n\n    var classes = classNames(Classes.NAVBAR, (_a = {}, _a[Classes.FIXED_TOP] = fixedToTop, _a), className);\n    return React.createElement(\"div\", tslib_1.__assign({\n      className: classes\n    }, htmlProps), children);\n  };\n\n  Navbar.displayName = DISPLAYNAME_PREFIX + \".Navbar\";\n  Navbar.Divider = NavbarDivider;\n  Navbar.Group = NavbarGroup;\n  Navbar.Heading = NavbarHeading;\n  Navbar = tslib_1.__decorate([polyfill], Navbar);\n  return Navbar;\n}(AbstractPureComponent2);\n\nexport { Navbar };","map":null,"metadata":{},"sourceType":"module"}