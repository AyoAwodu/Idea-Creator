{"ast":null,"code":"import { createElement } from 'react';\nimport { BaseWidget, OpType } from '@blink-mind/renderer-react';\nimport styled from 'styled-components';\nimport RichMarkDownEditor from 'awehook-rich-markdown-editor';\nimport debug from 'debug';\nimport { BlockType } from '@blink-mind/core';\nimport MarkdownSerializer from 'slate-md-serializer';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n\nvar log = debug('node:topic-content-editor');\nvar NodeContent = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  padding: 6px;\\n  background-color: \", \";\\n  cursor: \", \";\\n\"], [\"\\n  padding: 6px;\\n  background-color: \", \";\\n  cursor: \", \";\\n\"])), function (props) {\n  return props.readOnly ? null : 'white';\n}, function (props) {\n  return props.readOnly ? 'pointer' : 'text';\n});\n\nvar RichTextEditor =\n/** @class */\nfunction (_super) {\n  __extends(RichTextEditor, _super);\n\n  function RichTextEditor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onMouseDown = function (e) {\n      e.stopPropagation();\n    };\n\n    _this.onMouseMove = function (e) {\n      e.stopPropagation();\n    };\n\n    _this.onChange = function (value) {};\n\n    _this.getCustomizeProps = function () {\n      return null;\n    };\n\n    return _this;\n  }\n\n  RichTextEditor.prototype.render = function () {\n    var _a = this.props,\n        topicKey = _a.topicKey,\n        saveRef = _a.saveRef;\n\n    var _b = this.getCustomizeProps(),\n        block = _b.block,\n        readOnly = _b.readOnly,\n        refKeyPrefix = _b.refKeyPrefix;\n\n    var content = block.data;\n    if (content == null) return null;\n    var key = refKeyPrefix + \"-\" + topicKey;\n    return createElement(NodeContent, {\n      key: key,\n      readOnly: readOnly,\n      ref: saveRef(key),\n      onMouseDown: this.onMouseDown,\n      onMouseMove: this.onMouseMove\n    }, createElement(RichMarkDownEditor, {\n      editorValue: content,\n      readOnly: readOnly,\n      onChange: this.onChange\n    }));\n  };\n\n  return RichTextEditor;\n}(BaseWidget);\n\nvar templateObject_1;\n\nvar TopicContentEditor =\n/** @class */\nfunction (_super) {\n  __extends(TopicContentEditor, _super);\n\n  function TopicContentEditor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getCustomizeProps = function () {\n      var _a = _this.props,\n          model = _a.model,\n          topicKey = _a.topicKey;\n      var block = model.getTopic(topicKey).getBlock(BlockType.CONTENT).block;\n      var readOnly = model.editingContentKey !== topicKey;\n      var refKeyPrefix = 'content-editor';\n      return {\n        block: block,\n        readOnly: readOnly,\n        refKeyPrefix: refKeyPrefix\n      };\n    };\n\n    _this.onChange = function (value) {\n      _this.operation(OpType.SET_TOPIC_CONTENT, __assign(__assign({}, _this.props), {\n        content: value\n      }));\n    };\n\n    return _this;\n  }\n\n  return TopicContentEditor;\n}(RichTextEditor);\n\nvar TopicDescEditor =\n/** @class */\nfunction (_super) {\n  __extends(TopicDescEditor, _super);\n\n  function TopicDescEditor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getCustomizeProps = function () {\n      var _a = _this.props,\n          model = _a.model,\n          topicKey = _a.topicKey;\n      var block = model.getTopic(topicKey).getBlock(BlockType.DESC).block;\n      var readOnly = model.editingDescKey !== topicKey;\n      var refKeyPrefix = 'desc-editor';\n      return {\n        block: block,\n        readOnly: readOnly,\n        refKeyPrefix: refKeyPrefix\n      };\n    };\n\n    _this.onChange = function (value) {\n      _this.operation(OpType.SET_TOPIC_DESC, __assign(__assign({}, _this.props), {\n        desc: value\n      }));\n    };\n\n    return _this;\n  }\n\n  return TopicDescEditor;\n}(RichTextEditor);\n\nvar markdownSerializer = new MarkdownSerializer();\n\nfunction RichTextEditorPlugin() {\n  return {\n    renderTopicContentEditor: function (props) {\n      return createElement(TopicContentEditor, __assign({}, props));\n    },\n    renderTopicDescEditor: function (props) {\n      return createElement(TopicDescEditor, __assign({}, props));\n    },\n    serializeBlock: function (props, next) {\n      var block = props.block;\n\n      if (block.type === BlockType.CONTENT || block.type === BlockType.DESC) {\n        var res = {\n          type: block.type,\n          data: typeof block.data === 'string' ? block.data : markdownSerializer.serialize(block.data)\n        };\n        return res;\n      }\n\n      return next();\n    },\n    deserializeBlock: function (props, next) {\n      return next();\n    }\n  };\n}\n\nexport default RichTextEditorPlugin;","map":{"version":3,"sources":["../src/components/rich-text-editor.tsx","../src/components/topic-content-editor.tsx","../src/components/topic-desc-editor.tsx","../src/markdown-serializer.ts","../src/plugins/index.tsx"],"names":["React.createElement"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseWidget, OpType } from '@blink-mind/renderer-react';\nimport styled from 'styled-components';\nimport RichMarkDownEditor from 'awehook-rich-markdown-editor';\nimport debug from 'debug';\nconst log = debug('node:topic-content-editor');\n\ninterface NodeContentProps {\n  readOnly?: boolean;\n}\n\nconst NodeContent = styled.div<NodeContentProps>`\n  padding: 6px;\n  background-color: ${props => (props.readOnly ? null : 'white')};\n  cursor: ${props => (props.readOnly ? 'pointer' : 'text')};\n`;\n\nexport class RichTextEditor extends BaseWidget {\n  onMouseDown = e => {\n    e.stopPropagation();\n  };\n\n  onMouseMove = e => {\n    e.stopPropagation();\n  };\n  onChange = (value: () => string) => {};\n\n  getCustomizeProps = () => {\n    return null;\n  };\n\n  render() {\n    const { topicKey, saveRef } = this.props;\n    const { block, readOnly, refKeyPrefix } = this.getCustomizeProps();\n    const content = block.data;\n    if (content == null) return null;\n    const key = `${refKeyPrefix}-${topicKey}`;\n    return (\n      <NodeContent\n        key={key}\n        readOnly={readOnly}\n        ref={saveRef(key)}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n      >\n        <RichMarkDownEditor\n          editorValue={content}\n          readOnly={readOnly}\n          onChange={this.onChange}\n        />\n      </NodeContent>\n    );\n  }\n}\n","import * as React from 'react';\nimport { OpType } from '@blink-mind/renderer-react';\nimport { RichTextEditor } from './rich-text-editor';\nimport { BlockType } from '@blink-mind/core';\n\nexport class TopicContentEditor extends RichTextEditor {\n  getCustomizeProps = () => {\n    const { model, topicKey } = this.props;\n    const block = model.getTopic(topicKey).getBlock(BlockType.CONTENT).block;\n    const readOnly = model.editingContentKey !== topicKey;\n    const refKeyPrefix = 'content-editor';\n    return {\n      block,\n      readOnly,\n      refKeyPrefix\n    };\n  };\n  onChange = (value: () => string) => {\n    this.operation(OpType.SET_TOPIC_CONTENT, {\n      ...this.props,\n      content: value\n    });\n  };\n}\n","import * as React from 'react';\nimport { OpType } from '@blink-mind/renderer-react';\nimport { RichTextEditor } from './rich-text-editor';\nimport { BlockType } from '@blink-mind/core';\n\nexport class TopicDescEditor extends RichTextEditor {\n  getCustomizeProps = () => {\n    const { model, topicKey } = this.props;\n    const block = model.getTopic(topicKey).getBlock(BlockType.DESC).block;\n    const readOnly = model.editingDescKey !== topicKey;\n    const refKeyPrefix = 'desc-editor';\n    return {\n      block,\n      readOnly,\n      refKeyPrefix\n    };\n  };\n  onChange = (value: () => string) => {\n    this.operation(OpType.SET_TOPIC_DESC, {\n      ...this.props,\n      desc: value\n    });\n  };\n}\n","import MarkdownSerializer from 'slate-md-serializer';\nexport default new MarkdownSerializer();\n","import * as React from 'react';\nimport { TopicContentEditor } from '../components/topic-content-editor';\nimport { TopicDescEditor } from '../components/topic-desc-editor';\nimport markdownSerializer from '../markdown-serializer';\nimport { BlockType } from '@blink-mind/core';\nexport default function RichTextEditorPlugin() {\n  return {\n    renderTopicContentEditor(props) {\n      return <TopicContentEditor {...props} />;\n    },\n\n    renderTopicDescEditor(props) {\n      return <TopicDescEditor {...props} />;\n    },\n\n    serializeBlock(props, next) {\n      const { block } = props;\n      if (block.type === BlockType.CONTENT || block.type === BlockType.DESC) {\n        const res = {\n          type: block.type,\n          data:\n            typeof block.data === 'string'\n              ? block.data\n              : markdownSerializer.serialize(block.data)\n        };\n        return res;\n      }\n      return next();\n    },\n\n    deserializeBlock(props, next) {\n      return next();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}