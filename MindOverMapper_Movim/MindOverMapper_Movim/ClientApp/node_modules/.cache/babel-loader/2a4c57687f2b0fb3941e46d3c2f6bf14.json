{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayomi\\\\source\\\\repos\\\\Idea-Creator\\\\Idea-Creator\\\\MindOverMapper_Movim\\\\MindOverMapper_Movim\\\\ClientApp\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { Button, Form, FormGroup, FormText, Label, Input } from 'reactstrap';\nimport Slide from '@material-ui/core/Slide';\nimport logo from '../../static/Logo.png';\nimport background from '../../static/background.mp4';\nimport './Login.css';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.displayName = Login.name;\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleUserNameChange = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handleRecoveryEmail = event => {\n      this.setState({\n        recoveryEmail: event.target.value\n      });\n    };\n\n    this.handleClickOpenForgotPassword = () => {\n      this.setState({\n        openForgotPassword: true\n      });\n    };\n\n    this.handleCloseForgotPassword = () => {\n      this.setState({\n        openForgotPassword: false\n      });\n    };\n\n    this.handleCloseRegisterAccount = () => {\n      this.setState({\n        registrationModal: false\n      });\n    };\n\n    this.openRegisterAccount = () => {\n      this.setState({\n        registrationModal: true\n      });\n    };\n\n    this.handleCloseErrorModal = () => {\n      this.setState({\n        errorModal: false\n      });\n    };\n\n    this.openErrorModal = () => {\n      this.setState({\n        errorModal: true\n      });\n    };\n\n    this.handleRegisterEmailChange = event => {\n      this.setState({\n        registerEmail: event.target.value\n      });\n    };\n\n    this.handleRegisterPasswordChange = event => {\n      this.setState({\n        registerPassword: event.target.value\n      });\n    };\n\n    this.handleRegisterFirstNameChange = event => {\n      this.setState({\n        registerFirstName: event.target.value\n      });\n    };\n\n    this.handleRegisterLastNameChange = event => {\n      this.setState({\n        registerLastName: event.target.value\n      });\n    };\n\n    this.handleRecoveryCode = event => {\n      this.setState({\n        recoveryCode: event.target.value\n      });\n    };\n\n    this.handleRecoveryPassword1 = event => {\n      this.setState({\n        recoveryPassword1: event.target.value\n      });\n    };\n\n    this.handleRecoveryPassword2 = event => {\n      this.setState({\n        recoveryPassword2: event.target.value\n      });\n    };\n\n    this.openRecoverPassword = () => {\n      this.setState({\n        recoverPasswordModal: true\n      });\n    };\n\n    this.handleCloseRecoverPassword = () => {\n      this.setState({\n        recoverPasswordModal: false\n      });\n    };\n\n    this.handleSubmit = async event => {\n      let userData = {};\n      userData.userName = this.state.userName;\n      userData.password = this.state.password;\n      this.validate(userData.userName, userData.password).then(response => {\n        if (response.data.token) {\n          this.props.history.push({\n            pathname: '/home',\n            state: {\n              userData: response.data\n            } // need this for moving to different component\n\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          errorModalMessage: \"Incorrect Login Information\"\n        });\n        this.openErrorModal();\n      });\n    };\n\n    this.submitAccountRegistration = async () => {\n      let response = await axios.post('/api/auth/register', {\n        'email': this.state.registerEmail,\n        'password': this.state.registerPassword,\n        'firstName': this.state.registerFirstName,\n        'lastName': this.state.registerLastName\n      }).then(res => console.log(res)).catch(err => {\n        this.setState({\n          errorModalMessage: err.response.data.message\n        });\n        this.openErrorModal();\n      }); // close modal\n\n      if (this.state.errorModal == false) {\n        this.setState({\n          registrationModal: false,\n          errorModalMessage: 'Successfully Registered!'\n        });\n        this.openErrorModal();\n      }\n    };\n\n    this.validate = async (userName, password) => {\n      let response = await axios.post('api/auth/login', {\n        'email': userName,\n        'password': password\n      });\n      return response;\n    };\n\n    this.submitRecoveryEmail = async () => {\n      let response = await axios.post('/api/auth/grant', {\n        'email': this.state.recoveryEmail\n      });\n\n      if (response.status === 200) {\n        this.setState({\n          recoveryGrant: response.data.grant,\n          recoverPasswordModal: true\n        });\n      }\n    };\n\n    this.recoverAccount = async () => {\n      let response = await axios.post('/api/auth/recover', {\n        'grant': this.state.recoveryGrant,\n        'code': this.state.recoveryCode,\n        'newPassword': this.state.recoveryPassword2\n      }).catch(err => {\n        this.setState({\n          errorModalMessage: \"Incorrect Reset Information\"\n        });\n        this.openErrorModal();\n      });\n      ;\n\n      if (this.state.errorModal == false) {\n        this.setState({\n          recoveryPassword1: '',\n          recoveryPassword2: '',\n          recoveryCode: '',\n          recoverPasswordModal: false,\n          openForgotPassword: false\n        });\n      }\n    };\n\n    this.handleKeyDown = event => {\n      if (event.keyCode === 13 && this.state.userName !== '' && this.state.userName != null) {\n        this.handleSubmit();\n      }\n    };\n\n    this.state = {\n      userName: '',\n      password: '',\n      recoveryEmail: '',\n      loginError: false,\n      errorMessage: '',\n      passwordRegex: new RegExp(\"(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{6,}$\"),\n      registrationModal: false,\n      recoverPasswordModal: false,\n      errorModal: false,\n      recoveryCode: '',\n      recoveryPassword1: '',\n      registerFirstName: '',\n      registerLastName: '',\n      registerPassword: '',\n      registerEmail: ''\n    };\n  }\n\n  validateForm() {\n    return this.state.userName.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"page-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"background\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: background,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"login-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"logo-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"login-logo-span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"login-logo\",\n      alt: \"Login Logo\",\n      src: logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"logo-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"login-text-span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"logo-name-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Idea Creator\"))), React.createElement(\"div\", {\n      id: \"username-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"userName-input\",\n      placeholder: \"Email\",\n      value: this.state.userName,\n      onChange: this.handleUserNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"password-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"password-input\",\n      onKeyDown: this.handleKeyDown,\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-check\",\n      id: \"remember-me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      id: \"rememberme-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"rememberme-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Remember Me?\"), React.createElement(Button, {\n      color: \"link\",\n      id: \"forgot-pass\",\n      onClick: this.handleClickOpenForgotPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Forgot password?\"), React.createElement(Button, {\n      color: \"link\",\n      id: \"forgot-pass\",\n      onClick: this.openRegisterAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.openForgotPassword,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      maxWidth: \"md\",\n      onClose: this.handleCloseForgotPassword,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsibe-alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Password Recovery\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Email Address: \"), React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"Email\",\n      value: this.state.recoveryEmail,\n      onChange: this.handleRecoveryEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleCloseForgotPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      color: \"primary\",\n      id: \"continue-password\",\n      onClick: this.submitRecoveryEmail,\n      disabled: this.state.recoveryEmail.length < 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Continue\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.recoverPasswordModal,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsibe-alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Update Password\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Code: \"), React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.recoveryCode,\n      onChange: this.handleRecoveryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(Input, {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.recoveryPassword1,\n      onChange: this.handleRecoveryPassword1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Verify Password: \"), React.createElement(Input, {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.recoveryPassword2,\n      onChange: this.handleRecoveryPassword2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleCloseRecoverPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      color: \"primary\",\n      id: \"continue-password\",\n      onClick: this.recoverAccount,\n      disabled: this.state.recoveryPassword1 !== this.state.recoveryPassword2 || this.state.recoveryPassword1.length < 1 || this.state.recoveryCode.length < 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Continue\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.registrationModal,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      maxWidth: \"lg\",\n      onClose: this.handleCloseRegisterAccount,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsibe-alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Account Registration\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Email Address: \"), React.createElement(Input, {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.registerEmail,\n      onChange: this.handleRegisterEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(Input, {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.registerPassword,\n      onChange: this.handleRegisterPasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"First Name: \"), React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.registerFirstName,\n      onChange: this.handleRegisterFirstNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Last Name: \"), React.createElement(Input, {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"user-name\",\n      placeholder: \"\",\n      value: this.state.registerLastName,\n      onChange: this.handleRegisterLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.handleCloseRegisterAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.state.registerFirstName.length < 1 || this.state.registerLastName.length < 1 || this.state.registerPassword.length < 8 || this.state.registerEmail.length < 3,\n      id: \"continue-password\",\n      onClick: this.submitAccountRegistration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Continue\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.errorModal,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      maxWidth: \"lg\",\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"responsibe-alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, this.state.errorModalMessage), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseErrorModal,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      id: \"submit-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/src/components/login/Login.js"],"names":["React","Component","axios","Dialog","DialogTitle","DialogContent","DialogActions","Button","Form","FormGroup","FormText","Label","Input","Slide","logo","background","Transition","props","Login","constructor","displayName","name","handlePasswordChange","event","setState","password","target","value","handleUserNameChange","userName","handleRecoveryEmail","recoveryEmail","handleClickOpenForgotPassword","openForgotPassword","handleCloseForgotPassword","handleCloseRegisterAccount","registrationModal","openRegisterAccount","handleCloseErrorModal","errorModal","openErrorModal","handleRegisterEmailChange","registerEmail","handleRegisterPasswordChange","registerPassword","handleRegisterFirstNameChange","registerFirstName","handleRegisterLastNameChange","registerLastName","handleRecoveryCode","recoveryCode","handleRecoveryPassword1","recoveryPassword1","handleRecoveryPassword2","recoveryPassword2","openRecoverPassword","recoverPasswordModal","handleCloseRecoverPassword","handleSubmit","userData","state","validate","then","response","data","token","history","push","pathname","catch","err","errorModalMessage","submitAccountRegistration","post","res","console","log","message","submitRecoveryEmail","status","recoveryGrant","grant","recoverAccount","handleKeyDown","keyCode","loginError","errorMessage","passwordRegex","RegExp","validateForm","length","handleChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { Button, Form, FormGroup, FormText, Label, Input } from 'reactstrap';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport logo from '../../static/Logo.png';\r\nimport background from '../../static/background.mp4';\r\nimport './Login.css';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            recoveryEmail: '',\r\n            loginError: false,\r\n            errorMessage: '',\r\n            passwordRegex : new RegExp(\"(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{6,}$\"),\r\n            registrationModal: false,\r\n            recoverPasswordModal: false,\r\n            errorModal: false,\r\n            recoveryCode: '',\r\n            recoveryPassword1: '',\r\n            registerFirstName: '',\r\n            registerLastName: '',\r\n            registerPassword:'',\r\n            registerEmail: ''\r\n        }\r\n    }\r\n\r\n    displayName = Login.name;\r\n\r\n    validateForm() {\r\n        return this.state.userName.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handlePasswordChange = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUserNameChange = event => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRecoveryEmail = (event) => {\r\n        this.setState({\r\n            recoveryEmail: event.target.value\r\n        });\r\n    }\r\n\r\n    handleClickOpenForgotPassword = () => {\r\n        this.setState({ openForgotPassword: true});\r\n    };\r\n\r\n\r\n    handleCloseForgotPassword = () => {\r\n        this.setState({ \r\n            openForgotPassword: false,\r\n        });\r\n    };\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleCloseRegisterAccount = () => {\r\n        this.setState({\r\n            registrationModal: false\r\n        });\r\n    }\r\n\r\n    openRegisterAccount = () => {\r\n        this.setState({\r\n            registrationModal: true\r\n        });\r\n    }\r\n\r\n    handleCloseErrorModal = () => {\r\n        this.setState({\r\n            errorModal: false\r\n        });\r\n    }\r\n\r\n    openErrorModal = () => {\r\n        this.setState({\r\n            errorModal: true\r\n        });\r\n    }\r\n    \r\n\r\n    handleRegisterEmailChange = (event) => {\r\n        this.setState({\r\n            registerEmail: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRegisterPasswordChange = (event) => {\r\n        this.setState({\r\n            registerPassword: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRegisterFirstNameChange = (event) => {\r\n        this.setState({\r\n            registerFirstName: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRegisterLastNameChange = (event) => {\r\n        this.setState({\r\n            registerLastName: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRecoveryCode = (event) => {\r\n        this.setState({\r\n            recoveryCode: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRecoveryPassword1 = (event) => {\r\n        this.setState({\r\n            recoveryPassword1: event.target.value\r\n        });\r\n    }\r\n\r\n    handleRecoveryPassword2 = (event) => {\r\n        this.setState({\r\n            recoveryPassword2: event.target.value\r\n        });\r\n    }\r\n\r\n    openRecoverPassword = () => {\r\n        this.setState({\r\n            recoverPasswordModal: true\r\n        });\r\n    }\r\n\r\n    handleCloseRecoverPassword = () => {\r\n        this.setState({\r\n            recoverPasswordModal: false\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        let userData = {};\r\n       \r\n        userData.userName = this.state.userName;\r\n        userData.password = this.state.password;       \r\n\r\n        this.validate(userData.userName, userData.password).then((response)  => { \r\n        if (response.data.token) {\r\n            this.props.history.push({\r\n                pathname: '/home',\r\n                state: { userData: response.data } // need this for moving to different component\r\n            });\r\n        }\r\n    }).catch(err => {\r\n            this.setState({\r\n                errorModalMessage : \"Incorrect Login Information\"\r\n            });\r\n            this.openErrorModal();\r\n        });\r\n    }\r\n\r\n    submitAccountRegistration = async () => {\r\n        let response =  await axios.post('/api/auth/register',    \r\n            {\r\n                'email': this.state.registerEmail,            \r\n                'password': this.state.registerPassword,\r\n                'firstName': this.state.registerFirstName,\r\n                'lastName': this.state.registerLastName\r\n            }).then(res => console.log(res)).catch(err => \r\n                {\r\n                    this.setState({\r\n                        errorModalMessage : err.response.data.message\r\n                    });\r\n                this.openErrorModal();\r\n                }\r\n                );      \r\n                \r\n                // close modal\r\n\r\n                if(this.state.errorModal == false)\r\n                {\r\n                    this.setState({\r\n                        registrationModal : false,\r\n                        errorModalMessage : 'Successfully Registered!'\r\n                    });\r\n                    this.openErrorModal();\r\n           \r\n                }\r\n    }\r\n\r\n\r\n    validate = async (userName, password) => {\r\n        let response =  await axios.post('api/auth/login',    \r\n            {\r\n                'email': userName,            \r\n                'password': password,\r\n            });\r\n\r\n        return response;\r\n    }\r\n\r\n    submitRecoveryEmail = async () => {\r\n        let response = await axios.post('/api/auth/grant', {\r\n            'email': this.state.recoveryEmail\r\n        });\r\n        if(response.status === 200){\r\n            this.setState({\r\n                recoveryGrant: response.data.grant,\r\n                recoverPasswordModal: true\r\n            });\r\n        }\r\n    }\r\n\r\n    recoverAccount = async () => {\r\n        let response = await axios.post('/api/auth/recover', {\r\n            'grant': this.state.recoveryGrant,\r\n            'code': this.state.recoveryCode,\r\n            'newPassword': this.state.recoveryPassword2\r\n        }).catch(err => {\r\n            this.setState({\r\n                errorModalMessage : \"Incorrect Reset Information\"\r\n            });\r\n            this.openErrorModal();\r\n        });;\r\n\r\n        if(this.state.errorModal == false){\r\n            this.setState({\r\n                recoveryPassword1: '',\r\n                recoveryPassword2: '',\r\n                recoveryCode: '',\r\n                recoverPasswordModal: false,\r\n                openForgotPassword: false\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if(event.keyCode === 13 && this.state.userName !== '' && this.state.userName != null)\r\n        {\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='page-holder'>\r\n                <video className='background' autoPlay loop muted>\r\n                    <source src={background} type='video/mp4' />\r\n                </video>\r\n                <div id='login-holder'>\r\n                    <div id='login-container'>\r\n                        <div id='logo-holder'>\r\n                            <span id = 'login-logo-span'>\r\n                                <img id ='login-logo' alt = \"Login Logo\" src = {logo} />\r\n                            </span>\r\n                        </div>\r\n                        <div id='logo-holder'>\r\n                            <span id = 'login-text-span'>\r\n                                <p id = 'logo-name-text'>Idea Creator</p>\r\n                            </span>\r\n                        </div>\r\n                        <div id='username-field'>\r\n                            <input type=\"email\" class=\"form-control\" id=\"userName-input\" placeholder=\"Email\" value={this.state.userName} onChange={this.handleUserNameChange} />\r\n                        </div>\r\n                        <div id='password-field'>\r\n                            <input type=\"password\" class=\"form-control\" id=\"password-input\" onKeyDown={this.handleKeyDown} placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                        </div>\r\n                        <div class=\"form-check\" id='remember-me'>\r\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberme-check\"/>\r\n                            <label class=\"form-check-label\" for=\"rememberme-check\">Remember Me?</label>\r\n                            <Button color=\"link\" id='forgot-pass' onClick={this.handleClickOpenForgotPassword}>Forgot password?</Button>\r\n                            <Button color=\"link\" id='forgot-pass' onClick={this.openRegisterAccount}>Register</Button>                                                        \r\n                        </div>                       \r\n                        <div >\r\n                            <Dialog\r\n                                open={this.state.openForgotPassword}\r\n                                TransitionComponent={Transition}\r\n                                keepMounted\r\n                                maxWidth='md'\r\n                                onClose={this.handleCloseForgotPassword}\r\n                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                aria-describedby=\"alert-dialog-slide-description\"\r\n                            >\r\n                                <DialogTitle id=\"responsibe-alert-dialog-slide-title\">\r\n                                    {\"Password Recovery\"}\r\n                                </DialogTitle>\r\n                                <DialogContent>\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Email Address: </Label>\r\n                                            <Input type=\"text\" class=\"form-control\" id=\"user-name\" placeholder=\"Email\" value={this.state.recoveryEmail} onChange={this.handleRecoveryEmail} />\r\n                                        </FormGroup>\r\n                                        <DialogActions>                   \r\n                                            <Button color=\"danger\" onClick={this.handleCloseForgotPassword}>Cancel</Button>\r\n                                            <Button color=\"primary\" id='continue-password' onClick={this.submitRecoveryEmail} disabled={this.state.recoveryEmail.length < 1}>Continue</Button>\r\n                                        </DialogActions>\r\n                                    </Form>\r\n                                </DialogContent>\r\n                            </Dialog> \r\n                        </div>\r\n                        <div >\r\n                            <Dialog\r\n                                open={this.state.recoverPasswordModal}\r\n                                TransitionComponent={Transition}\r\n                                keepMounted\r\n                                maxWidth='md'\r\n                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                aria-describedby=\"alert-dialog-slide-description\"\r\n                            >\r\n                                <DialogTitle id=\"responsibe-alert-dialog-slide-title\">\r\n                                    {\"Update Password\"}\r\n                                </DialogTitle>\r\n                                <DialogContent>\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Code: </Label>\r\n                                            <Input type=\"text\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.recoveryCode} onChange={this.handleRecoveryCode} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Password: </Label>\r\n                                            <Input type=\"password\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.recoveryPassword1} onChange={this.handleRecoveryPassword1} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Verify Password: </Label>\r\n                                            <Input type=\"password\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.recoveryPassword2} onChange={this.handleRecoveryPassword2} />\r\n                                        </FormGroup>\r\n                                        <DialogActions>                   \r\n                                            <Button color=\"danger\" onClick={this.handleCloseRecoverPassword}>Cancel</Button>\r\n                                            <Button color=\"primary\" id='continue-password' onClick={this.recoverAccount} disabled={(this.state.recoveryPassword1 !== this.state.recoveryPassword2) || (this.state.recoveryPassword1.length < 1) || (this.state.recoveryCode.length <1)}>Continue</Button>\r\n                                        </DialogActions>\r\n                                    </Form>\r\n                                </DialogContent>\r\n                            </Dialog> \r\n                        </div>\r\n                        <div >\r\n                            <Dialog\r\n                                open={this.state.registrationModal}\r\n                                TransitionComponent={Transition}\r\n                                keepMounted\r\n                                maxWidth='lg'\r\n                                onClose={this.handleCloseRegisterAccount}\r\n                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                aria-describedby=\"alert-dialog-slide-description\"\r\n                            >\r\n                                <DialogTitle id=\"responsibe-alert-dialog-slide-title\">\r\n                                    {\"Account Registration\"}\r\n                                </DialogTitle>\r\n                                <DialogContent>\r\n                                    <Form>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Email Address: </Label>\r\n                                            <Input type=\"email\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.registerEmail} onChange={this.handleRegisterEmailChange} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Password: </Label>\r\n                                            <Input type=\"password\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.registerPassword} onChange={this.handleRegisterPasswordChange} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">First Name: </Label>\r\n                                            <Input type=\"text\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.registerFirstName} onChange={this.handleRegisterFirstNameChange} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"userName\">Last Name: </Label>\r\n                                            <Input type=\"text\" class=\"form-control\" id=\"user-name\" placeholder=\"\" value={this.state.registerLastName} onChange={this.handleRegisterLastNameChange} />\r\n                                        </FormGroup>\r\n                                        <DialogActions>                   \r\n                                            <Button color=\"danger\" onClick={this.handleCloseRegisterAccount}>Cancel</Button>\r\n                                            <Button color=\"primary\" disabled ={(this.state.registerFirstName.length < 1) || (this.state.registerLastName.length <1 || this.state.registerPassword.length < 8 || this.state.registerEmail.length < 3)} id='continue-password' onClick={this.submitAccountRegistration}>Continue</Button>\r\n                                        </DialogActions>\r\n                                    </Form>\r\n                                </DialogContent>\r\n                            </Dialog> \r\n                        </div>\r\n                        <div >\r\n                            <Dialog\r\n                                open={this.state.errorModal}\r\n                                TransitionComponent={Transition}\r\n                                keepMounted\r\n                                maxWidth='lg'\r\n                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                aria-describedby=\"alert-dialog-slide-description\"\r\n                            >\r\n                                <DialogTitle id=\"responsibe-alert-dialog-slide-title\">\r\n                                    {this.state.errorModalMessage}\r\n                                </DialogTitle>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleCloseErrorModal} color=\"primary\">\r\n                                        Close\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\" id='submit-button' onClick={this.handleSubmit} >Login</button>  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}