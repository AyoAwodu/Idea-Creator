{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = require('immutable');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DEFAULTS = {\n  type: 'blockquote',\n  typeDefault: 'paragraph'\n};\n/**\n * The plugin options container\n */\n\nvar Options = function (_Record) {\n  _inherits(Options, _Record);\n\n  function Options() {\n    _classCallCheck(this, Options);\n\n    return _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).apply(this, arguments));\n  }\n\n  return Options;\n}((0, _immutable.Record)(DEFAULTS));\n\nexports.default = Options;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-blockquote/dist/options.js"],"names":["Object","defineProperty","exports","value","_immutable","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","DEFAULTS","type","typeDefault","Options","_Record","getPrototypeOf","apply","arguments","Record","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBjB,MAAM,CAACkB,MAAP,CAAcF,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEE,IAAAA,WAAW,EAAE;AAAEhB,MAAAA,KAAK,EAAEY,QAAT;AAAmBK,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIN,UAAJ,EAAgBhB,MAAM,CAACuB,cAAP,GAAwBvB,MAAM,CAACuB,cAAP,CAAsBR,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACS,SAAT,GAAqBR,UAA3F;AAAwG;;AAE9e,IAAIS,QAAQ,GAAG;AACXC,EAAAA,IAAI,EAAE,YADK;AAEXC,EAAAA,WAAW,EAAE;AAFF,CAAf;AAKA;;;;AAIA,IAAIC,OAAO,GAAG,UAAUC,OAAV,EAAmB;AAC7Bf,EAAAA,SAAS,CAACc,OAAD,EAAUC,OAAV,CAAT;;AAEA,WAASD,OAAT,GAAmB;AACftB,IAAAA,eAAe,CAAC,IAAD,EAAOsB,OAAP,CAAf;;AAEA,WAAOlB,0BAA0B,CAAC,IAAD,EAAO,CAACkB,OAAO,CAACJ,SAAR,IAAqBxB,MAAM,CAAC8B,cAAP,CAAsBF,OAAtB,CAAtB,EAAsDG,KAAtD,CAA4D,IAA5D,EAAkEC,SAAlE,CAAP,CAAjC;AACH;;AAED,SAAOJ,OAAP;AACH,CAVa,CAUZ,CAAC,GAAGxB,UAAU,CAAC6B,MAAf,EAAuBR,QAAvB,CAVY,CAAd;;AAYAvB,OAAO,CAACgC,OAAR,GAAkBN,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _immutable = require('immutable');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DEFAULTS = {\n    type: 'blockquote',\n    typeDefault: 'paragraph'\n};\n\n/**\n * The plugin options container\n */\n\nvar Options = function (_Record) {\n    _inherits(Options, _Record);\n\n    function Options() {\n        _classCallCheck(this, Options);\n\n        return _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).apply(this, arguments));\n    }\n\n    return Options;\n}((0, _immutable.Record)(DEFAULTS));\n\nexports.default = Options;"]},"metadata":{},"sourceType":"script"}