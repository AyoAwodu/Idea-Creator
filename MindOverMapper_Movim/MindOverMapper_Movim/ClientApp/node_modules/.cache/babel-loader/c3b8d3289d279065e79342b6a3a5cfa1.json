{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate');\n\nvar _getIndent = require('./getIndent');\n\nvar _getIndent2 = _interopRequireDefault(_getIndent);\n\nvar _getCurrentCode = require('./getCurrentCode');\n\nvar _getCurrentCode2 = _interopRequireDefault(_getCurrentCode);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Detect indentation in the current code block\n */\n\n\nfunction getCurrentIndent(opts, value) {\n  if (opts.getIndent) {\n    return opts.getIndent(value);\n  }\n\n  var currentCode = (0, _getCurrentCode2.default)(opts, value);\n\n  if (!currentCode) {\n    return '';\n  }\n\n  var text = currentCode.getTexts().map(function (t) {\n    return t.text;\n  }).join('\\n');\n  return (0, _getIndent2.default)(text);\n}\n\nexports.default = getCurrentIndent;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/utils/getCurrentIndent.js"],"names":["Object","defineProperty","exports","value","require","_getIndent","_getIndent2","_interopRequireDefault","_getCurrentCode","_getCurrentCode2","obj","__esModule","default","getCurrentIndent","opts","getIndent","currentCode","text","getTexts","map","t","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIAC,OAAO,CAAC,OAAD,CAAP;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAIE,WAAW,GAAGC,sBAAsB,CAACF,UAAD,CAAxC;;AAEA,IAAIG,eAAe,GAAGJ,OAAO,CAAC,kBAAD,CAA7B;;AAEA,IAAIK,gBAAgB,GAAGF,sBAAsB,CAACC,eAAD,CAA7C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;AAGA,SAASG,gBAAT,CAA0BC,IAA1B,EAAgCX,KAAhC,EAAuC;AACnC,MAAIW,IAAI,CAACC,SAAT,EAAoB;AAChB,WAAOD,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAAP;AACH;;AAED,MAAIa,WAAW,GAAG,CAAC,GAAGP,gBAAgB,CAACG,OAArB,EAA8BE,IAA9B,EAAoCX,KAApC,CAAlB;;AACA,MAAI,CAACa,WAAL,EAAkB;AACd,WAAO,EAAP;AACH;;AAED,MAAIC,IAAI,GAAGD,WAAW,CAACE,QAAZ,GAAuBC,GAAvB,CAA2B,UAAUC,CAAV,EAAa;AAC/C,WAAOA,CAAC,CAACH,IAAT;AACH,GAFU,EAERI,IAFQ,CAEH,IAFG,CAAX;AAGA,SAAO,CAAC,GAAGf,WAAW,CAACM,OAAhB,EAAyBK,IAAzB,CAAP;AACH;;AAEDf,OAAO,CAACU,OAAR,GAAkBC,gBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nrequire('slate');\n\nvar _getIndent = require('./getIndent');\n\nvar _getIndent2 = _interopRequireDefault(_getIndent);\n\nvar _getCurrentCode = require('./getCurrentCode');\n\nvar _getCurrentCode2 = _interopRequireDefault(_getCurrentCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Detect indentation in the current code block\n */\nfunction getCurrentIndent(opts, value) {\n    if (opts.getIndent) {\n        return opts.getIndent(value);\n    }\n\n    var currentCode = (0, _getCurrentCode2.default)(opts, value);\n    if (!currentCode) {\n        return '';\n    }\n\n    var text = currentCode.getTexts().map(function (t) {\n        return t.text;\n    }).join('\\n');\n    return (0, _getIndent2.default)(text);\n}\n\nexports.default = getCurrentIndent;"]},"metadata":{},"sourceType":"script"}