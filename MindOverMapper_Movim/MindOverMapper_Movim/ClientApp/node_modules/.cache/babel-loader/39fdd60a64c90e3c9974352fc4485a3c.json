{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate');\n\nvar _getCurrentBlockquote = require('./getCurrentBlockquote');\n\nvar _getCurrentBlockquote2 = _interopRequireDefault(_getCurrentBlockquote);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Is the selection in a blockquote\n */\n\n\nfunction isSelectionInBlockquote(opts, value) {\n  return Boolean((0, _getCurrentBlockquote2.default)(opts, value));\n}\n\nexports.default = isSelectionInBlockquote;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-blockquote/dist/utils/isSelectionInBlockquote.js"],"names":["Object","defineProperty","exports","value","require","_getCurrentBlockquote","_getCurrentBlockquote2","_interopRequireDefault","obj","__esModule","default","isSelectionInBlockquote","opts","Boolean"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIAC,OAAO,CAAC,OAAD,CAAP;;AAEA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,wBAAD,CAAnC;;AAEA,IAAIE,sBAAsB,GAAGC,sBAAsB,CAACF,qBAAD,CAAnD;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;AAGA,SAASG,uBAAT,CAAiCC,IAAjC,EAAuCT,KAAvC,EAA8C;AAC5C,SAAOU,OAAO,CAAC,CAAC,GAAGP,sBAAsB,CAACI,OAA3B,EAAoCE,IAApC,EAA0CT,KAA1C,CAAD,CAAd;AACD;;AAEDD,OAAO,CAACQ,OAAR,GAAkBC,uBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire('slate');\n\nvar _getCurrentBlockquote = require('./getCurrentBlockquote');\n\nvar _getCurrentBlockquote2 = _interopRequireDefault(_getCurrentBlockquote);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Is the selection in a blockquote\n */\nfunction isSelectionInBlockquote(opts, value) {\n  return Boolean((0, _getCurrentBlockquote2.default)(opts, value));\n}\n\nexports.default = isSelectionInBlockquote;"]},"metadata":{},"sourceType":"script"}