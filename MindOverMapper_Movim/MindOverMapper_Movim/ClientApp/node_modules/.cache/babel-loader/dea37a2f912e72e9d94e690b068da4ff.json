{"ast":null,"code":"/*\r\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport { Utils } from \"@blueprintjs/core\";\n/**\r\n * Utility function for executing the {@link IListItemsProps#itemsEqual} prop to test\r\n * for equality between two items.\r\n * @return `true` if the two items are equivalent according to `itemsEqualProp`.\r\n */\n\nexport function executeItemsEqual(itemsEqualProp, itemA, itemB) {\n  // Use strict equality if:\n  // A) Default equality check is necessary because itemsEqualProp is undefined.\n  // OR\n  // B) Either item is null/undefined. Note that null represents \"no item\", while\n  //    undefined represents an uncontrolled prop. This strict equality check ensures\n  //    nothing will ever be considered equivalent to an uncontrolled prop.\n  if (itemsEqualProp === undefined || itemA == null || itemB == null) {\n    return itemA === itemB;\n  }\n\n  if (Utils.isFunction(itemsEqualProp)) {\n    // itemsEqualProp is an equality comparator function, so use it\n    return itemsEqualProp(itemA, itemB);\n  } else {\n    // itemsEqualProp is a property name, so strictly compare the values of the property.\n    return itemA[itemsEqualProp] === itemB[itemsEqualProp];\n  }\n}","map":null,"metadata":{},"sourceType":"module"}