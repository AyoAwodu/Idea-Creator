{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slate = require('slate');\n\nvar _slateReact = require('slate-react');\n\nvar _utils = require('../utils');\n/**\n * User is pasting content, insert it as text\n */\n\n\nfunction onPaste(opts, event, editor, next) {\n  var value = editor.value;\n  var data = (0, _slateReact.getEventTransfer)(event);\n  var currentCode = (0, _utils.getCurrentCode)(opts, value); // Only handle paste when selection is completely a code block\n\n  var endBlock = value.endBlock;\n\n  if (!currentCode || !currentCode.hasDescendant(endBlock.key)) {\n    return next();\n  } // Convert to text if needed\n\n\n  var text = void 0;\n\n  if (data.type === 'fragment') {\n    text = data.fragment.getTexts().map(function (t) {\n      return t.text;\n    }).join('\\n');\n  } else {\n    text = data.text;\n  } // Convert the text to code lines\n\n\n  var lines = (0, _utils.deserializeCode)(opts, text).nodes;\n\n  var fragment = _slate.Document.create({\n    nodes: lines\n  });\n\n  return editor.insertFragment(fragment);\n}\n\nexports.default = onPaste;","map":{"version":3,"sources":["C:/Users/ayomi/source/repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/handlers/onPaste.js"],"names":["Object","defineProperty","exports","value","_slate","require","_slateReact","_utils","onPaste","opts","event","editor","next","data","getEventTransfer","currentCode","getCurrentCode","endBlock","hasDescendant","key","text","type","fragment","getTexts","map","t","join","lines","deserializeCode","nodes","Document","create","insertFragment","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;AAEA;;;;;AAGA,SAASG,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AACxC,MAAIT,KAAK,GAAGQ,MAAM,CAACR,KAAnB;AAEA,MAAIU,IAAI,GAAG,CAAC,GAAGP,WAAW,CAACQ,gBAAhB,EAAkCJ,KAAlC,CAAX;AACA,MAAIK,WAAW,GAAG,CAAC,GAAGR,MAAM,CAACS,cAAX,EAA2BP,IAA3B,EAAiCN,KAAjC,CAAlB,CAJwC,CAMxC;;AACA,MAAIc,QAAQ,GAAGd,KAAK,CAACc,QAArB;;AAEA,MAAI,CAACF,WAAD,IAAgB,CAACA,WAAW,CAACG,aAAZ,CAA0BD,QAAQ,CAACE,GAAnC,CAArB,EAA8D;AAC1D,WAAOP,IAAI,EAAX;AACH,GAXuC,CAaxC;;;AACA,MAAIQ,IAAI,GAAG,KAAK,CAAhB;;AACA,MAAIP,IAAI,CAACQ,IAAL,KAAc,UAAlB,EAA8B;AAC1BD,IAAAA,IAAI,GAAGP,IAAI,CAACS,QAAL,CAAcC,QAAd,GAAyBC,GAAzB,CAA6B,UAAUC,CAAV,EAAa;AAC7C,aAAOA,CAAC,CAACL,IAAT;AACH,KAFM,EAEJM,IAFI,CAEC,IAFD,CAAP;AAGH,GAJD,MAIO;AACHN,IAAAA,IAAI,GAAGP,IAAI,CAACO,IAAZ;AACH,GArBuC,CAuBxC;;;AACA,MAAIO,KAAK,GAAG,CAAC,GAAGpB,MAAM,CAACqB,eAAX,EAA4BnB,IAA5B,EAAkCW,IAAlC,EAAwCS,KAApD;;AAEA,MAAIP,QAAQ,GAAGlB,MAAM,CAAC0B,QAAP,CAAgBC,MAAhB,CAAuB;AAAEF,IAAAA,KAAK,EAAEF;AAAT,GAAvB,CAAf;;AAEA,SAAOhB,MAAM,CAACqB,cAAP,CAAsBV,QAAtB,CAAP;AACH;;AACDpB,OAAO,CAAC+B,OAAR,GAAkBzB,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slate = require('slate');\n\nvar _slateReact = require('slate-react');\n\nvar _utils = require('../utils');\n\n/**\n * User is pasting content, insert it as text\n */\nfunction onPaste(opts, event, editor, next) {\n    var value = editor.value;\n\n    var data = (0, _slateReact.getEventTransfer)(event);\n    var currentCode = (0, _utils.getCurrentCode)(opts, value);\n\n    // Only handle paste when selection is completely a code block\n    var endBlock = value.endBlock;\n\n    if (!currentCode || !currentCode.hasDescendant(endBlock.key)) {\n        return next();\n    }\n\n    // Convert to text if needed\n    var text = void 0;\n    if (data.type === 'fragment') {\n        text = data.fragment.getTexts().map(function (t) {\n            return t.text;\n        }).join('\\n');\n    } else {\n        text = data.text;\n    }\n\n    // Convert the text to code lines\n    var lines = (0, _utils.deserializeCode)(opts, text).nodes;\n\n    var fragment = _slate.Document.create({ nodes: lines });\n\n    return editor.insertFragment(fragment);\n}\nexports.default = onPaste;"]},"metadata":{},"sourceType":"script"}