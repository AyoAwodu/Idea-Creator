{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _options = require('./options');\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _utils = require('./utils');\n\nvar _changes = require('./changes');\n\nvar _validation = require('./validation');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The core of the plugin, which does not relies on `slate-react`, and includes\n * everything but behavior and rendering logic.\n */\n\n\nfunction core(optsParam) {\n  var opts = new _options2.default(optsParam);\n  return {\n    schema: (0, _validation.schema)(opts),\n    changes: {\n      unwrapCodeBlockByKey: _changes.unwrapCodeBlockByKey.bind(null, opts),\n      wrapCodeBlockByKey: _changes.wrapCodeBlockByKey.bind(null, opts),\n      wrapCodeBlock: _changes.wrapCodeBlock.bind(null, opts),\n      unwrapCodeBlock: _changes.unwrapCodeBlock.bind(null, opts),\n      toggleCodeBlock: _changes.toggleCodeBlock.bind(null, opts)\n    },\n    utils: {\n      isInCodeBlock: _utils.isInCodeBlock.bind(null, opts),\n      deserializeCode: _utils.deserializeCode.bind(null, opts)\n    }\n  };\n}\n\nexports.default = core;","map":{"version":3,"sources":["C:/Users/ayomi/Source/Repos/Idea-Creator/Idea-Creator/MindOverMapper_Movim/MindOverMapper_Movim/ClientApp/node_modules/@wikifactory/slate-edit-code/dist/core.js"],"names":["Object","defineProperty","exports","value","_options","require","_options2","_interopRequireDefault","_utils","_changes","_validation","obj","__esModule","default","core","optsParam","opts","schema","changes","unwrapCodeBlockByKey","bind","wrapCodeBlockByKey","wrapCodeBlock","unwrapCodeBlock","toggleCodeBlock","utils","isInCodeBlock","deserializeCode"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,cAAD,CAAzB;;AAEA,SAASE,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;;;;;;AAIA,SAASG,IAAT,CAAcC,SAAd,EAAyB;AACrB,MAAIC,IAAI,GAAG,IAAIV,SAAS,CAACO,OAAd,CAAsBE,SAAtB,CAAX;AAEA,SAAO;AACHE,IAAAA,MAAM,EAAE,CAAC,GAAGP,WAAW,CAACO,MAAhB,EAAwBD,IAAxB,CADL;AAGHE,IAAAA,OAAO,EAAE;AACLC,MAAAA,oBAAoB,EAAEV,QAAQ,CAACU,oBAAT,CAA8BC,IAA9B,CAAmC,IAAnC,EAAyCJ,IAAzC,CADjB;AAELK,MAAAA,kBAAkB,EAAEZ,QAAQ,CAACY,kBAAT,CAA4BD,IAA5B,CAAiC,IAAjC,EAAuCJ,IAAvC,CAFf;AAGLM,MAAAA,aAAa,EAAEb,QAAQ,CAACa,aAAT,CAAuBF,IAAvB,CAA4B,IAA5B,EAAkCJ,IAAlC,CAHV;AAILO,MAAAA,eAAe,EAAEd,QAAQ,CAACc,eAAT,CAAyBH,IAAzB,CAA8B,IAA9B,EAAoCJ,IAApC,CAJZ;AAKLQ,MAAAA,eAAe,EAAEf,QAAQ,CAACe,eAAT,CAAyBJ,IAAzB,CAA8B,IAA9B,EAAoCJ,IAApC;AALZ,KAHN;AAWHS,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAElB,MAAM,CAACkB,aAAP,CAAqBN,IAArB,CAA0B,IAA1B,EAAgCJ,IAAhC,CADZ;AAEHW,MAAAA,eAAe,EAAEnB,MAAM,CAACmB,eAAP,CAAuBP,IAAvB,CAA4B,IAA5B,EAAkCJ,IAAlC;AAFd;AAXJ,GAAP;AAgBH;;AAEDd,OAAO,CAACW,OAAR,GAAkBC,IAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _options = require('./options');\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _utils = require('./utils');\n\nvar _changes = require('./changes');\n\nvar _validation = require('./validation');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The core of the plugin, which does not relies on `slate-react`, and includes\n * everything but behavior and rendering logic.\n */\nfunction core(optsParam) {\n    var opts = new _options2.default(optsParam);\n\n    return {\n        schema: (0, _validation.schema)(opts),\n\n        changes: {\n            unwrapCodeBlockByKey: _changes.unwrapCodeBlockByKey.bind(null, opts),\n            wrapCodeBlockByKey: _changes.wrapCodeBlockByKey.bind(null, opts),\n            wrapCodeBlock: _changes.wrapCodeBlock.bind(null, opts),\n            unwrapCodeBlock: _changes.unwrapCodeBlock.bind(null, opts),\n            toggleCodeBlock: _changes.toggleCodeBlock.bind(null, opts)\n        },\n\n        utils: {\n            isInCodeBlock: _utils.isInCodeBlock.bind(null, opts),\n            deserializeCode: _utils.deserializeCode.bind(null, opts)\n        }\n    };\n}\n\nexports.default = core;"]},"metadata":{},"sourceType":"script"}